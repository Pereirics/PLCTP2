
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programleftANDOREQNEQleftGTELTE><left+-$left*/%leftUMINUS!leftINDEXALLOC AND ATOI BREAK CONTINUE DEF ELSE EQ FALSE GTE ID IF INPUT LTE NEQ NUM OR PRINT PRINTI PRINTLN RETURN STR STRING TRUE VAR WHILEprogram : declist start funlist entrypoint stmtlist start :entrypoint :fun : DEF fun_name '(' idlist ')' block \n           | DEF fun_name '(' ')' block fun_name : ID stmt : PRINT '(' expr ')' ';' stmt : PRINTLN '(' ')' ';' stmt : WHILE new_label '(' expr ')' jz block stmt : BREAK ';' stmt : CONTINUE ';' stmt : IF '(' expr ')' jz block \n            | IF '(' expr ')' jz block ELSE jmp jz_label block jmp :jz :jz_label :new_label :var_declare : VAR ID '=' expr ';' \n                   | VAR ID ';' stmt : ID '=' expr ';' stmt : arr_id '[' expr ']' '=' expr ';' arr_id : ID stmt : RETURN expr ';' \n            | RETURN ';' stmt : PRINTI '(' expr ')' ';' stmt : expr ';' expr : INPUT '(' ')' expr : STR '(' expr ')' expr : ATOI '(' expr ')' expr : ALLOC '(' expr ')' expr : expr '+' expr \n            | expr '-' expr\n            | expr '*' expr \n            | expr '/' expr\n            | expr '%' expr\n            | expr OR expr\n            | expr AND expr \n            | expr '>' expr \n            | expr '<' expr \n            | expr GTE expr\n            | expr LTE expr \n            | expr EQ expr\n            | expr NEQ expr\n            | expr '$' expr expr : '!' expr expr : '-' expr %prec UMINUS expr : ID expr : expr '[' expr ']' %prec INDEX expr : STRING expr : NUM expr : TRUE expr : FALSE expr : ID '(' exprlist ')' \n            | ID '(' ')' expr : '(' expr ')' declist : declist var_declare\n               |funlist : funlist fun \n               |stmtlist : stmtlist stmt \n                |idlist : idlist ',' ID\n              | ID exprlist : exprlist ',' expr\n                | expr block : '{' stmtlist '}' \n             | stmt "
    
_lr_action_items = {'VAR':([0,2,4,12,43,],[-57,5,-56,-19,-18,]),'DEF':([0,2,3,4,6,9,12,43,67,70,71,76,110,114,116,124,127,130,134,138,139,141,143,145,148,],[-57,-2,-59,-56,10,-58,-19,-18,-26,-10,-11,-24,-23,-5,-67,-8,-20,-4,-7,-25,-66,-12,-9,-21,-13,]),'PRINT':([0,2,3,4,6,8,9,12,13,29,43,67,70,71,76,79,110,112,114,115,116,124,126,127,130,132,134,135,136,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,-19,30,-60,-18,-26,-10,-11,-24,30,-23,30,-5,-61,-67,-8,-15,-20,-4,30,-7,-15,30,-25,-66,30,-12,-9,-14,-21,-16,30,-13,]),'PRINTLN':([0,2,3,4,6,8,9,12,13,29,43,67,70,71,76,79,110,112,114,115,116,124,126,127,130,132,134,135,136,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,-19,32,-60,-18,-26,-10,-11,-24,32,-23,32,-5,-61,-67,-8,-15,-20,-4,32,-7,-15,32,-25,-66,32,-12,-9,-14,-21,-16,32,-13,]),'WHILE':([0,2,3,4,6,8,9,12,13,29,43,67,70,71,76,79,110,112,114,115,116,124,126,127,130,132,134,135,136,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,-19,33,-60,-18,-26,-10,-11,-24,33,-23,33,-5,-61,-67,-8,-15,-20,-4,33,-7,-15,33,-25,-66,33,-12,-9,-14,-21,-16,33,-13,]),'BREAK':([0,2,3,4,6,8,9,12,13,29,43,67,70,71,76,79,110,112,114,115,116,124,126,127,130,132,134,135,136,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,-19,34,-60,-18,-26,-10,-11,-24,34,-23,34,-5,-61,-67,-8,-15,-20,-4,34,-7,-15,34,-25,-66,34,-12,-9,-14,-21,-16,34,-13,]),'CONTINUE':([0,2,3,4,6,8,9,12,13,29,43,67,70,71,76,79,110,112,114,115,116,124,126,127,130,132,134,135,136,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,-19,35,-60,-18,-26,-10,-11,-24,35,-23,35,-5,-61,-67,-8,-15,-20,-4,35,-7,-15,35,-25,-66,35,-12,-9,-14,-21,-16,35,-13,]),'IF':([0,2,3,4,6,8,9,12,13,29,43,67,70,71,76,79,110,112,114,115,116,124,126,127,130,132,134,135,136,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,-19,36,-60,-18,-26,-10,-11,-24,36,-23,36,-5,-61,-67,-8,-15,-20,-4,36,-7,-15,36,-25,-66,36,-12,-9,-14,-21,-16,36,-13,]),'ID':([0,2,3,4,5,6,8,9,10,11,12,13,19,23,24,29,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,67,70,71,72,73,74,76,77,79,106,110,112,113,114,115,116,118,124,126,127,130,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,7,-3,-61,-58,15,16,-19,37,16,16,16,-60,16,80,16,-18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-26,-10,-11,16,16,16,-24,16,37,16,-23,37,131,-5,-61,-67,16,-8,-15,-20,-4,37,-7,-15,37,16,-25,-66,37,-12,-9,-14,-21,-16,37,-13,]),'RETURN':([0,2,3,4,6,8,9,12,13,29,43,67,70,71,76,79,110,112,114,115,116,124,126,127,130,132,134,135,136,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,-19,39,-60,-18,-26,-10,-11,-24,39,-23,39,-5,-61,-67,-8,-15,-20,-4,39,-7,-15,39,-25,-66,39,-12,-9,-14,-21,-16,39,-13,]),'PRINTI':([0,2,3,4,6,8,9,12,13,29,43,67,70,71,76,79,110,112,114,115,116,124,126,127,130,132,134,135,136,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,-19,40,-60,-18,-26,-10,-11,-24,40,-23,40,-5,-61,-67,-8,-15,-20,-4,40,-7,-15,40,-25,-66,40,-12,-9,-14,-21,-16,40,-13,]),'INPUT':([0,2,3,4,6,8,9,11,12,13,19,23,24,29,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,67,70,71,72,73,74,76,77,79,106,110,112,114,115,116,118,124,126,127,130,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,18,-19,18,18,18,18,-60,18,18,-18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-26,-10,-11,18,18,18,-24,18,18,18,-23,18,-5,-61,-67,18,-8,-15,-20,-4,18,-7,-15,18,18,-25,-66,18,-12,-9,-14,-21,-16,18,-13,]),'STR':([0,2,3,4,6,8,9,11,12,13,19,23,24,29,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,67,70,71,72,73,74,76,77,79,106,110,112,114,115,116,118,124,126,127,130,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,20,-19,20,20,20,20,-60,20,20,-18,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-26,-10,-11,20,20,20,-24,20,20,20,-23,20,-5,-61,-67,20,-8,-15,-20,-4,20,-7,-15,20,20,-25,-66,20,-12,-9,-14,-21,-16,20,-13,]),'ATOI':([0,2,3,4,6,8,9,11,12,13,19,23,24,29,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,67,70,71,72,73,74,76,77,79,106,110,112,114,115,116,118,124,126,127,130,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,21,-19,21,21,21,21,-60,21,21,-18,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-26,-10,-11,21,21,21,-24,21,21,21,-23,21,-5,-61,-67,21,-8,-15,-20,-4,21,-7,-15,21,21,-25,-66,21,-12,-9,-14,-21,-16,21,-13,]),'ALLOC':([0,2,3,4,6,8,9,11,12,13,19,23,24,29,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,67,70,71,72,73,74,76,77,79,106,110,112,114,115,116,118,124,126,127,130,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,22,-19,22,22,22,22,-60,22,22,-18,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-26,-10,-11,22,22,22,-24,22,22,22,-23,22,-5,-61,-67,22,-8,-15,-20,-4,22,-7,-15,22,22,-25,-66,22,-12,-9,-14,-21,-16,22,-13,]),'!':([0,2,3,4,6,8,9,11,12,13,19,23,24,29,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,67,70,71,72,73,74,76,77,79,106,110,112,114,115,116,118,124,126,127,130,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,24,-19,24,24,24,24,-60,24,24,-18,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-26,-10,-11,24,24,24,-24,24,24,24,-23,24,-5,-61,-67,24,-8,-15,-20,-4,24,-7,-15,24,24,-25,-66,24,-12,-9,-14,-21,-16,24,-13,]),'-':([0,2,3,4,6,8,9,11,12,13,16,17,19,23,24,25,26,27,28,29,31,37,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,124,125,126,127,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,23,-19,23,-47,45,23,23,23,-49,-50,-51,-52,-60,45,-47,23,23,-18,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,45,23,23,23,-46,-45,23,-26,-10,-11,23,23,23,45,-24,23,23,-54,45,-31,-32,-33,-34,-35,45,45,45,45,45,45,45,45,-44,45,-27,-55,45,45,45,45,23,45,45,45,-23,45,23,-5,-61,-67,-53,23,-48,-28,-29,-30,-8,45,-15,-20,-4,23,45,-7,-15,23,23,-25,-66,23,-12,45,-9,-14,-21,-16,23,-13,]),'STRING':([0,2,3,4,6,8,9,11,12,13,19,23,24,29,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,67,70,71,72,73,74,76,77,79,106,110,112,114,115,116,118,124,126,127,130,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,25,-19,25,25,25,25,-60,25,25,-18,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-26,-10,-11,25,25,25,-24,25,25,25,-23,25,-5,-61,-67,25,-8,-15,-20,-4,25,-7,-15,25,25,-25,-66,25,-12,-9,-14,-21,-16,25,-13,]),'NUM':([0,2,3,4,6,8,9,11,12,13,19,23,24,29,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,67,70,71,72,73,74,76,77,79,106,110,112,114,115,116,118,124,126,127,130,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,26,-19,26,26,26,26,-60,26,26,-18,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-26,-10,-11,26,26,26,-24,26,26,26,-23,26,-5,-61,-67,26,-8,-15,-20,-4,26,-7,-15,26,26,-25,-66,26,-12,-9,-14,-21,-16,26,-13,]),'TRUE':([0,2,3,4,6,8,9,11,12,13,19,23,24,29,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,67,70,71,72,73,74,76,77,79,106,110,112,114,115,116,118,124,126,127,130,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,27,-19,27,27,27,27,-60,27,27,-18,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-26,-10,-11,27,27,27,-24,27,27,27,-23,27,-5,-61,-67,27,-8,-15,-20,-4,27,-7,-15,27,27,-25,-66,27,-12,-9,-14,-21,-16,27,-13,]),'FALSE':([0,2,3,4,6,8,9,11,12,13,19,23,24,29,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,67,70,71,72,73,74,76,77,79,106,110,112,114,115,116,118,124,126,127,130,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,28,-19,28,28,28,28,-60,28,28,-18,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-26,-10,-11,28,28,28,-24,28,28,28,-23,28,-5,-61,-67,28,-8,-15,-20,-4,28,-7,-15,28,28,-25,-66,28,-12,-9,-14,-21,-16,28,-13,]),'(':([0,2,3,4,6,8,9,11,12,13,14,15,16,18,19,20,21,22,23,24,29,30,32,33,36,37,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,67,69,70,71,72,73,74,76,77,79,106,110,112,114,115,116,118,124,126,127,130,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,],[-57,-2,-59,-56,-3,-61,-58,19,-19,19,41,-6,42,59,19,61,62,63,19,19,-60,66,68,-17,72,42,19,77,19,-18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-26,106,-10,-11,19,19,19,-24,19,19,19,-23,19,-5,-61,-67,19,-8,-15,-20,-4,19,-7,-15,19,19,-25,-66,19,-12,-9,-14,-21,-16,19,-13,]),'$end':([0,1,2,3,4,6,8,9,12,13,29,43,67,70,71,76,110,114,116,124,127,130,134,138,139,141,143,145,148,],[-57,0,-2,-59,-56,-3,-61,-58,-19,-1,-60,-18,-26,-10,-11,-24,-23,-5,-67,-8,-20,-4,-7,-25,-66,-12,-9,-21,-13,]),'=':([7,37,128,],[11,73,137,]),';':([7,16,17,25,26,27,28,31,34,35,37,39,64,65,75,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,105,108,117,119,120,121,122,123,129,142,],[12,-47,43,-49,-50,-51,-52,67,70,71,-47,76,-46,-45,110,-54,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-27,-55,124,127,-53,-48,-28,-29,-30,134,138,145,]),'+':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,44,-49,-50,-51,-52,44,-47,44,-46,-45,44,-54,44,-31,-32,-33,-34,-35,44,44,44,44,44,44,44,44,-44,44,-27,-55,44,44,44,44,44,44,44,44,-53,-48,-28,-29,-30,44,44,44,]),'*':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,46,-49,-50,-51,-52,46,-47,46,-46,-45,46,-54,46,46,46,-33,-34,-35,46,46,46,46,46,46,46,46,46,46,-27,-55,46,46,46,46,46,46,46,46,-53,-48,-28,-29,-30,46,46,46,]),'/':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,47,-49,-50,-51,-52,47,-47,47,-46,-45,47,-54,47,47,47,-33,-34,-35,47,47,47,47,47,47,47,47,47,47,-27,-55,47,47,47,47,47,47,47,47,-53,-48,-28,-29,-30,47,47,47,]),'%':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,48,-49,-50,-51,-52,48,-47,48,-46,-45,48,-54,48,48,48,-33,-34,-35,48,48,48,48,48,48,48,48,48,48,-27,-55,48,48,48,48,48,48,48,48,-53,-48,-28,-29,-30,48,48,48,]),'OR':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,49,-49,-50,-51,-52,49,-47,49,-46,-45,49,-54,49,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,49,-27,-55,49,49,49,49,49,49,49,49,-53,-48,-28,-29,-30,49,49,49,]),'AND':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,50,-49,-50,-51,-52,50,-47,50,-46,-45,50,-54,50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,50,-27,-55,50,50,50,50,50,50,50,50,-53,-48,-28,-29,-30,50,50,50,]),'>':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,51,-49,-50,-51,-52,51,-47,51,-46,-45,51,-54,51,-31,-32,-33,-34,-35,51,51,-38,-39,-40,-41,51,51,-44,51,-27,-55,51,51,51,51,51,51,51,51,-53,-48,-28,-29,-30,51,51,51,]),'<':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,52,-49,-50,-51,-52,52,-47,52,-46,-45,52,-54,52,-31,-32,-33,-34,-35,52,52,-38,-39,-40,-41,52,52,-44,52,-27,-55,52,52,52,52,52,52,52,52,-53,-48,-28,-29,-30,52,52,52,]),'GTE':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,53,-49,-50,-51,-52,53,-47,53,-46,-45,53,-54,53,-31,-32,-33,-34,-35,53,53,-38,-39,-40,-41,53,53,-44,53,-27,-55,53,53,53,53,53,53,53,53,-53,-48,-28,-29,-30,53,53,53,]),'LTE':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,54,-49,-50,-51,-52,54,-47,54,-46,-45,54,-54,54,-31,-32,-33,-34,-35,54,54,-38,-39,-40,-41,54,54,-44,54,-27,-55,54,54,54,54,54,54,54,54,-53,-48,-28,-29,-30,54,54,54,]),'EQ':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,55,-49,-50,-51,-52,55,-47,55,-46,-45,55,-54,55,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,55,-27,-55,55,55,55,55,55,55,55,55,-53,-48,-28,-29,-30,55,55,55,]),'NEQ':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,56,-49,-50,-51,-52,56,-47,56,-46,-45,56,-54,56,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,56,-27,-55,56,56,56,56,56,56,56,56,-53,-48,-28,-29,-30,56,56,56,]),'$':([16,17,25,26,27,28,31,37,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,57,-49,-50,-51,-52,57,-47,57,-46,-45,57,-54,57,-31,-32,-33,-34,-35,57,57,57,57,57,57,57,57,-44,57,-27,-55,57,57,57,57,57,57,57,57,-53,-48,-28,-29,-30,57,57,57,]),'[':([16,17,25,26,27,28,31,37,38,60,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,117,119,120,121,122,125,133,142,],[-47,58,-49,-50,-51,-52,58,-22,74,58,-46,-45,58,-54,58,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,58,-27,-55,58,58,58,58,58,58,58,58,-53,-48,-28,-29,-30,58,58,58,]),')':([16,25,26,27,28,41,42,59,60,64,65,68,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,107,111,117,119,120,121,122,125,131,133,],[-47,-49,-50,-51,-52,79,82,99,100,-46,-45,105,112,-63,117,-54,-65,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-27,-55,120,121,122,123,126,129,-53,-48,-28,-29,-30,135,-62,-64,]),',':([16,25,26,27,28,64,65,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,117,119,120,121,122,131,133,],[-47,-49,-50,-51,-52,-46,-45,113,-63,118,-54,-65,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-27,-55,-53,-48,-28,-29,-30,-62,-64,]),']':([16,25,26,27,28,64,65,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,109,117,119,120,121,122,],[-47,-49,-50,-51,-52,-46,-45,-54,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,119,-27,-55,128,-53,-48,-28,-29,-30,]),'}':([29,67,70,71,76,110,115,116,124,127,132,134,138,139,141,143,145,148,],[-60,-26,-10,-11,-24,-23,-61,-67,-8,-20,139,-7,-25,-66,-12,-9,-21,-13,]),'ELSE':([67,70,71,76,110,116,124,127,134,138,139,141,143,145,148,],[-26,-10,-11,-24,-23,-67,-8,-20,-7,-25,-66,144,-9,-21,-13,]),'{':([79,112,126,135,136,140,144,146,147,],[115,115,-15,-15,115,115,-14,-16,115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'start':([2,],[3,]),'var_declare':([2,],[4,]),'funlist':([3,],[6,]),'entrypoint':([6,],[8,]),'fun':([6,],[9,]),'stmtlist':([8,115,],[13,132,]),'fun_name':([10,],[14,]),'expr':([11,13,19,23,24,39,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,66,72,73,74,77,79,106,112,118,132,136,137,140,147,],[17,31,60,64,65,75,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,107,108,109,111,31,125,31,133,31,31,142,31,31,]),'stmt':([13,79,112,132,136,140,147,],[29,116,116,29,116,116,116,]),'arr_id':([13,79,112,132,136,140,147,],[38,38,38,38,38,38,38,]),'new_label':([33,],[69,]),'idlist':([41,],[78,]),'exprlist':([42,],[81,]),'block':([79,112,136,140,147,],[114,130,141,143,148,]),'jz':([126,135,],[136,140,]),'jmp':([144,],[146,]),'jz_label':([146,],[147,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist start funlist entrypoint stmtlist','program',5,'p_program','parser.py',22),
  ('start -> <empty>','start',0,'p_start','parser.py',26),
  ('entrypoint -> <empty>','entrypoint',0,'p_entrypoint','parser.py',30),
  ('fun -> DEF fun_name ( idlist ) block','fun',6,'p_fun','parser.py',34),
  ('fun -> DEF fun_name ( ) block','fun',5,'p_fun','parser.py',35),
  ('fun_name -> ID','fun_name',1,'p_fun_name','parser.py',45),
  ('stmt -> PRINT ( expr ) ;','stmt',5,'p_stmt_print','parser.py',53),
  ('stmt -> PRINTLN ( ) ;','stmt',4,'p_stmt_println','parser.py',57),
  ('stmt -> WHILE new_label ( expr ) jz block','stmt',7,'p_stmt_while','parser.py',61),
  ('stmt -> BREAK ;','stmt',2,'p_stmt_break','parser.py',67),
  ('stmt -> CONTINUE ;','stmt',2,'p_stmt_continue','parser.py',71),
  ('stmt -> IF ( expr ) jz block','stmt',6,'p_stmt_ifelse','parser.py',75),
  ('stmt -> IF ( expr ) jz block ELSE jmp jz_label block','stmt',10,'p_stmt_ifelse','parser.py',76),
  ('jmp -> <empty>','jmp',0,'p_jmp','parser.py',83),
  ('jz -> <empty>','jz',0,'p_jz','parser.py',89),
  ('jz_label -> <empty>','jz_label',0,'p_jz_label','parser.py',96),
  ('new_label -> <empty>','new_label',0,'p_new_label','parser.py',101),
  ('var_declare -> VAR ID = expr ;','var_declare',5,'p_declare','parser.py',107),
  ('var_declare -> VAR ID ;','var_declare',3,'p_declare','parser.py',108),
  ('stmt -> ID = expr ;','stmt',4,'p_stmt_assign','parser.py',119),
  ('stmt -> arr_id [ expr ] = expr ;','stmt',7,'p_stmt_assign_arr','parser.py',128),
  ('arr_id -> ID','arr_id',1,'p_stmt_arr_id','parser.py',132),
  ('stmt -> RETURN expr ;','stmt',3,'p_stmt_return','parser.py',141),
  ('stmt -> RETURN ;','stmt',2,'p_stmt_return','parser.py',142),
  ('stmt -> PRINTI ( expr ) ;','stmt',5,'p_stmt_printi','parser.py',150),
  ('stmt -> expr ;','stmt',2,'p_stmt_expr','parser.py',154),
  ('expr -> INPUT ( )','expr',3,'p_expr_input','parser.py',162),
  ('expr -> STR ( expr )','expr',4,'p_expr_str','parser.py',166),
  ('expr -> ATOI ( expr )','expr',4,'p_expr_atoi','parser.py',170),
  ('expr -> ALLOC ( expr )','expr',4,'p_expr_alloc','parser.py',174),
  ('expr -> expr + expr','expr',3,'p_expr_binop','parser.py',178),
  ('expr -> expr - expr','expr',3,'p_expr_binop','parser.py',179),
  ('expr -> expr * expr','expr',3,'p_expr_binop','parser.py',180),
  ('expr -> expr / expr','expr',3,'p_expr_binop','parser.py',181),
  ('expr -> expr % expr','expr',3,'p_expr_binop','parser.py',182),
  ('expr -> expr OR expr','expr',3,'p_expr_binop','parser.py',183),
  ('expr -> expr AND expr','expr',3,'p_expr_binop','parser.py',184),
  ('expr -> expr > expr','expr',3,'p_expr_binop','parser.py',185),
  ('expr -> expr < expr','expr',3,'p_expr_binop','parser.py',186),
  ('expr -> expr GTE expr','expr',3,'p_expr_binop','parser.py',187),
  ('expr -> expr LTE expr','expr',3,'p_expr_binop','parser.py',188),
  ('expr -> expr EQ expr','expr',3,'p_expr_binop','parser.py',189),
  ('expr -> expr NEQ expr','expr',3,'p_expr_binop','parser.py',190),
  ('expr -> expr $ expr','expr',3,'p_expr_binop','parser.py',191),
  ('expr -> ! expr','expr',2,'p_expr_not','parser.py',211),
  ('expr -> - expr','expr',2,'p_expr_neg','parser.py',215),
  ('expr -> ID','expr',1,'p_expr_id','parser.py',220),
  ('expr -> expr [ expr ]','expr',4,'p_expr_ind','parser.py',229),
  ('expr -> STRING','expr',1,'p_expr_string','parser.py',233),
  ('expr -> NUM','expr',1,'p_expr_num','parser.py',237),
  ('expr -> TRUE','expr',1,'p_expr_true','parser.py',241),
  ('expr -> FALSE','expr',1,'p_expr_false','parser.py',245),
  ('expr -> ID ( exprlist )','expr',4,'p_expr_fun','parser.py',249),
  ('expr -> ID ( )','expr',3,'p_expr_fun','parser.py',250),
  ('expr -> ( expr )','expr',3,'p_expr','parser.py',260),
  ('declist -> declist var_declare','declist',2,'p_declist','parser.py',265),
  ('declist -> <empty>','declist',0,'p_declist','parser.py',266),
  ('funlist -> funlist fun','funlist',2,'p_funlist','parser.py',269),
  ('funlist -> <empty>','funlist',0,'p_funlist','parser.py',270),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','parser.py',273),
  ('stmtlist -> <empty>','stmtlist',0,'p_stmtlist','parser.py',274),
  ('idlist -> idlist , ID','idlist',3,'p_idlist','parser.py',277),
  ('idlist -> ID','idlist',1,'p_idlist','parser.py',278),
  ('exprlist -> exprlist , expr','exprlist',3,'p_exprlist','parser.py',285),
  ('exprlist -> expr','exprlist',1,'p_exprlist','parser.py',286),
  ('block -> { stmtlist }','block',3,'p_block','parser.py',289),
  ('block -> stmt','block',1,'p_block','parser.py',290),
]
