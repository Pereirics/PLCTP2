
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programleftANDOREQNEQleftGTELTE><left+-$left*/%leftUMINUS!leftINDEXAND ATOI DEF ELSE EQ FALSE GTE ID IF INPUT LTE NEQ NUM OR PRINT PRINTI PRINTLN RETURN STR STRING TRUE VAR WHILEprogram : declist start funlist entrypoint stmtlist start :entrypoint :fun : DEF fun_name '(' idlist ')' block \n           | DEF fun_name '(' ')' block fun_name : ID stmt : PRINT '(' expr ')' ';' stmt : PRINTLN '(' ')' ';' stmt : WHILE new_label '(' expr ')' jz block stmt : IF '(' expr ')' jz block \n            | IF '(' expr ')' jz block ELSE jmp jz_label block jmp :jz :jz_label :new_label :var_declare : VAR ID '=' expr ';' \n                   | VAR ID ';' \n                   | VAR ID '[' NUM ']' ';' \n                   | VAR ID '[' NUM ']' '[' NUM ']' ';' stmt : ID '=' expr ';' stmt : expr '[' expr ']' '=' expr ';' stmt : RETURN expr ';' \n            | RETURN ';' stmt : PRINTI '(' expr ')' ';' stmt : expr ';' expr : INPUT '(' ')' expr : STR '(' expr ')' expr : ATOI '(' expr ')' expr : expr '+' expr \n            | expr '-' expr\n            | expr '*' expr \n            | expr '/' expr\n            | expr '%' expr\n            | expr OR expr\n            | expr AND expr \n            | expr '>' expr \n            | expr '<' expr \n            | expr GTE expr\n            | expr LTE expr \n            | expr EQ expr\n            | expr NEQ expr\n            | expr '$' expr expr : '!' expr expr : '-' expr %prec UMINUS expr : ID expr : expr '[' expr ']' %prec INDEX expr : STRING expr : NUM expr : TRUE expr : FALSE expr : ID '(' exprlist ')' \n            | ID '(' ')' expr : '(' expr ')' declist : declist var_declare\n               |funlist : funlist fun \n               |stmtlist : stmtlist stmt \n                |idlist : idlist ',' ID\n              | ID exprlist : exprlist ',' expr\n                | expr block : '{' stmtlist '}' \n             | stmt "
    
_lr_action_items = {'VAR':([0,2,4,12,41,100,138,],[-55,5,-54,-17,-16,-18,-19,]),'DEF':([0,2,3,4,6,9,12,41,66,72,100,107,111,113,122,125,127,132,136,137,138,141,142,143,147,],[-55,-2,-57,-54,10,-56,-17,-16,-25,-23,-18,-22,-5,-65,-8,-20,-4,-7,-24,-64,-19,-10,-21,-9,-11,]),'PRINT':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,100,107,109,111,112,113,122,124,125,127,129,132,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,-17,31,-58,-16,-25,-23,31,-18,-22,31,-5,-59,-65,-8,-13,-20,-4,31,-7,-13,31,-24,-64,-19,31,-10,-21,-9,-12,-14,31,-11,]),'PRINTLN':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,100,107,109,111,112,113,122,124,125,127,129,132,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,-17,33,-58,-16,-25,-23,33,-18,-22,33,-5,-59,-65,-8,-13,-20,-4,33,-7,-13,33,-24,-64,-19,33,-10,-21,-9,-12,-14,33,-11,]),'WHILE':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,100,107,109,111,112,113,122,124,125,127,129,132,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,-17,34,-58,-16,-25,-23,34,-18,-22,34,-5,-59,-65,-8,-13,-20,-4,34,-7,-13,34,-24,-64,-19,34,-10,-21,-9,-12,-14,34,-11,]),'IF':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,100,107,109,111,112,113,122,124,125,127,129,132,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,-17,35,-58,-16,-25,-23,35,-18,-22,35,-5,-59,-65,-8,-13,-20,-4,35,-7,-13,35,-24,-64,-19,35,-10,-21,-9,-12,-14,35,-11,]),'ID':([0,2,3,4,5,6,8,9,10,11,12,14,20,23,24,30,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,100,104,107,109,110,111,112,113,115,122,124,125,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,7,-3,-59,-56,16,17,-17,36,17,17,17,-58,17,76,17,-16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-25,17,17,-23,17,36,-18,17,-22,36,128,-5,-59,-65,17,-8,-13,-20,-4,36,-7,17,-13,36,-24,-64,-19,36,-10,-21,-9,-12,-14,36,-11,]),'RETURN':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,100,107,109,111,112,113,122,124,125,127,129,132,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,-17,37,-58,-16,-25,-23,37,-18,-22,37,-5,-59,-65,-8,-13,-20,-4,37,-7,-13,37,-24,-64,-19,37,-10,-21,-9,-12,-14,37,-11,]),'PRINTI':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,100,107,109,111,112,113,122,124,125,127,129,132,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,-17,38,-58,-16,-25,-23,38,-18,-22,38,-5,-59,-65,-8,-13,-20,-4,38,-7,-13,38,-24,-64,-19,38,-10,-21,-9,-12,-14,38,-11,]),'INPUT':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,100,104,107,109,111,112,113,115,122,124,125,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,19,-17,19,19,19,19,-58,19,19,-16,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-25,19,19,-23,19,19,-18,19,-22,19,-5,-59,-65,19,-8,-13,-20,-4,19,-7,19,-13,19,-24,-64,-19,19,-10,-21,-9,-12,-14,19,-11,]),'STR':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,100,104,107,109,111,112,113,115,122,124,125,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,21,-17,21,21,21,21,-58,21,21,-16,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-25,21,21,-23,21,21,-18,21,-22,21,-5,-59,-65,21,-8,-13,-20,-4,21,-7,21,-13,21,-24,-64,-19,21,-10,-21,-9,-12,-14,21,-11,]),'ATOI':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,100,104,107,109,111,112,113,115,122,124,125,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,22,-17,22,22,22,22,-58,22,22,-16,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-25,22,22,-23,22,22,-18,22,-22,22,-5,-59,-65,22,-8,-13,-20,-4,22,-7,22,-13,22,-24,-64,-19,22,-10,-21,-9,-12,-14,22,-11,]),'!':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,100,104,107,109,111,112,113,115,122,124,125,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,24,-17,24,24,24,24,-58,24,24,-16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-25,24,24,-23,24,24,-18,24,-22,24,-5,-59,-65,24,-8,-13,-20,-4,24,-7,24,-13,24,-24,-64,-19,24,-10,-21,-9,-12,-14,24,-11,]),'-':([0,2,3,4,6,8,9,11,12,14,17,18,20,23,24,25,26,27,28,30,32,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,64,65,66,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,105,106,107,108,109,111,112,113,114,115,116,117,118,121,122,123,124,125,127,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,23,-17,23,-45,43,23,23,23,-47,-48,-49,-50,-58,43,-45,23,23,-16,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,43,23,23,-44,-43,23,23,-25,23,23,43,-23,23,23,-52,43,-29,-30,-31,-32,-33,43,43,43,43,43,43,43,43,-42,43,-26,-53,43,43,-18,43,43,23,43,43,-22,43,23,-5,-59,-65,-51,23,-46,-27,-28,-46,-8,43,-13,-20,-4,23,43,-7,23,-13,23,-24,-64,-19,43,23,-10,-21,-9,-12,-14,23,-11,]),'STRING':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,100,104,107,109,111,112,113,115,122,124,125,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,25,-17,25,25,25,25,-58,25,25,-16,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-25,25,25,-23,25,25,-18,25,-22,25,-5,-59,-65,25,-8,-13,-20,-4,25,-7,25,-13,25,-24,-64,-19,25,-10,-21,-9,-12,-14,25,-11,]),'NUM':([0,2,3,4,6,8,9,11,12,13,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,99,100,104,107,109,111,112,113,115,122,124,125,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,26,-17,29,26,26,26,26,-58,26,26,-16,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-25,26,26,-23,26,26,119,-18,26,-22,26,-5,-59,-65,26,-8,-13,-20,-4,26,-7,26,-13,26,-24,-64,-19,26,-10,-21,-9,-12,-14,26,-11,]),'TRUE':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,100,104,107,109,111,112,113,115,122,124,125,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,27,-17,27,27,27,27,-58,27,27,-16,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-25,27,27,-23,27,27,-18,27,-22,27,-5,-59,-65,27,-8,-13,-20,-4,27,-7,27,-13,27,-24,-64,-19,27,-10,-21,-9,-12,-14,27,-11,]),'FALSE':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,100,104,107,109,111,112,113,115,122,124,125,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,28,-17,28,28,28,28,-58,28,28,-16,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-25,28,28,-23,28,28,-18,28,-22,28,-5,-59,-65,28,-8,-13,-20,-4,28,-7,28,-13,28,-24,-64,-19,28,-10,-21,-9,-12,-14,28,-11,]),'(':([0,2,3,4,6,8,9,11,12,14,15,16,17,19,20,21,22,23,24,30,31,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,68,69,70,72,73,75,100,104,107,109,111,112,113,115,122,124,125,127,129,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,],[-55,-2,-57,-54,-3,-59,-56,20,-17,20,39,-6,40,57,20,59,60,20,20,-58,64,67,-15,69,40,20,73,20,-16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-25,104,20,20,-23,20,20,-18,20,-22,20,-5,-59,-65,20,-8,-13,-20,-4,20,-7,20,-13,20,-24,-64,-19,20,-10,-21,-9,-12,-14,20,-11,]),'$end':([0,1,2,3,4,6,8,9,12,14,30,41,66,72,100,107,111,113,122,125,127,132,136,137,138,141,142,143,147,],[-55,0,-2,-57,-54,-3,-59,-56,-17,-1,-58,-16,-25,-23,-18,-22,-5,-65,-8,-20,-4,-7,-24,-64,-19,-10,-21,-9,-11,]),'=':([7,36,121,],[11,70,133,]),';':([7,17,18,25,26,27,28,32,36,37,61,62,63,71,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,103,106,114,116,117,118,120,121,126,131,139,],[12,-45,41,-47,-48,-49,-50,66,-45,72,-44,-43,100,107,-52,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-26,-53,122,125,-51,-46,-27,-28,132,-46,136,138,142,]),'[':([7,17,18,25,26,27,28,32,36,58,61,62,63,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[13,-45,56,-47,-48,-49,-50,65,-45,56,-44,-43,99,56,-52,56,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,56,-26,-53,56,56,56,56,56,56,56,-51,-46,-27,-28,-46,56,56,56,]),'+':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,42,-47,-48,-49,-50,42,-45,42,-44,-43,42,-52,42,-29,-30,-31,-32,-33,42,42,42,42,42,42,42,42,-42,42,-26,-53,42,42,42,42,42,42,42,-51,-46,-27,-28,-46,42,42,42,]),'*':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,44,-47,-48,-49,-50,44,-45,44,-44,-43,44,-52,44,44,44,-31,-32,-33,44,44,44,44,44,44,44,44,44,44,-26,-53,44,44,44,44,44,44,44,-51,-46,-27,-28,-46,44,44,44,]),'/':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,45,-47,-48,-49,-50,45,-45,45,-44,-43,45,-52,45,45,45,-31,-32,-33,45,45,45,45,45,45,45,45,45,45,-26,-53,45,45,45,45,45,45,45,-51,-46,-27,-28,-46,45,45,45,]),'%':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,46,-47,-48,-49,-50,46,-45,46,-44,-43,46,-52,46,46,46,-31,-32,-33,46,46,46,46,46,46,46,46,46,46,-26,-53,46,46,46,46,46,46,46,-51,-46,-27,-28,-46,46,46,46,]),'OR':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,47,-47,-48,-49,-50,47,-45,47,-44,-43,47,-52,47,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,47,-26,-53,47,47,47,47,47,47,47,-51,-46,-27,-28,-46,47,47,47,]),'AND':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,48,-47,-48,-49,-50,48,-45,48,-44,-43,48,-52,48,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,48,-26,-53,48,48,48,48,48,48,48,-51,-46,-27,-28,-46,48,48,48,]),'>':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,49,-47,-48,-49,-50,49,-45,49,-44,-43,49,-52,49,-29,-30,-31,-32,-33,49,49,-36,-37,-38,-39,49,49,-42,49,-26,-53,49,49,49,49,49,49,49,-51,-46,-27,-28,-46,49,49,49,]),'<':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,50,-47,-48,-49,-50,50,-45,50,-44,-43,50,-52,50,-29,-30,-31,-32,-33,50,50,-36,-37,-38,-39,50,50,-42,50,-26,-53,50,50,50,50,50,50,50,-51,-46,-27,-28,-46,50,50,50,]),'GTE':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,51,-47,-48,-49,-50,51,-45,51,-44,-43,51,-52,51,-29,-30,-31,-32,-33,51,51,-36,-37,-38,-39,51,51,-42,51,-26,-53,51,51,51,51,51,51,51,-51,-46,-27,-28,-46,51,51,51,]),'LTE':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,52,-47,-48,-49,-50,52,-45,52,-44,-43,52,-52,52,-29,-30,-31,-32,-33,52,52,-36,-37,-38,-39,52,52,-42,52,-26,-53,52,52,52,52,52,52,52,-51,-46,-27,-28,-46,52,52,52,]),'EQ':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,53,-47,-48,-49,-50,53,-45,53,-44,-43,53,-52,53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,53,-26,-53,53,53,53,53,53,53,53,-51,-46,-27,-28,-46,53,53,53,]),'NEQ':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,54,-47,-48,-49,-50,54,-45,54,-44,-43,54,-52,54,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,54,-26,-53,54,54,54,54,54,54,54,-51,-46,-27,-28,-46,54,54,54,]),'$':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,108,114,116,117,118,121,123,130,139,],[-45,55,-47,-48,-49,-50,55,-45,55,-44,-43,55,-52,55,-29,-30,-31,-32,-33,55,55,55,55,55,55,55,55,-42,55,-26,-53,55,55,55,55,55,55,55,-51,-46,-27,-28,-46,55,55,55,]),')':([17,25,26,27,28,39,40,57,58,61,62,67,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,101,105,108,114,116,117,118,123,128,130,],[-45,-47,-48,-49,-50,75,78,95,96,-44,-43,103,109,-61,114,-52,-63,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-26,-53,117,118,120,124,126,-51,-46,-27,-28,134,-60,-62,]),',':([17,25,26,27,28,61,62,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,114,116,117,118,128,130,],[-45,-47,-48,-49,-50,-44,-43,110,-61,115,-52,-63,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-26,-53,-51,-46,-27,-28,-60,-62,]),']':([17,25,26,27,28,29,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,114,116,117,118,119,],[-45,-47,-48,-49,-50,63,-44,-43,-52,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,116,-26,-53,121,-51,-46,-27,-28,131,]),'}':([30,66,72,107,112,113,122,125,129,132,136,137,141,142,143,147,],[-58,-25,-23,-22,-59,-65,-8,-20,137,-7,-24,-64,-10,-21,-9,-11,]),'ELSE':([66,72,107,113,122,125,132,136,137,141,142,143,147,],[-25,-23,-22,-65,-8,-20,-7,-24,-64,144,-21,-9,-11,]),'{':([75,109,124,134,135,140,144,145,146,],[112,112,-13,-13,112,112,-12,-14,112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'start':([2,],[3,]),'var_declare':([2,],[4,]),'funlist':([3,],[6,]),'entrypoint':([6,],[8,]),'fun':([6,],[9,]),'stmtlist':([8,112,],[14,129,]),'fun_name':([10,],[15,]),'expr':([11,14,20,23,24,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,69,70,73,75,104,109,115,129,133,135,140,146,],[18,32,58,61,62,71,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,101,102,105,106,108,32,123,32,130,32,139,32,32,32,]),'stmt':([14,75,109,129,135,140,146,],[30,113,113,30,113,113,113,]),'new_label':([34,],[68,]),'idlist':([39,],[74,]),'exprlist':([40,],[77,]),'block':([75,109,135,140,146,],[111,127,141,143,147,]),'jz':([124,134,],[135,140,]),'jmp':([144,],[145,]),'jz_label':([145,],[146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist start funlist entrypoint stmtlist','program',5,'p_program','parser.py',21),
  ('start -> <empty>','start',0,'p_start','parser.py',25),
  ('entrypoint -> <empty>','entrypoint',0,'p_entrypoint','parser.py',29),
  ('fun -> DEF fun_name ( idlist ) block','fun',6,'p_fun','parser.py',33),
  ('fun -> DEF fun_name ( ) block','fun',5,'p_fun','parser.py',34),
  ('fun_name -> ID','fun_name',1,'p_fun_name','parser.py',45),
  ('stmt -> PRINT ( expr ) ;','stmt',5,'p_stmt_print','parser.py',53),
  ('stmt -> PRINTLN ( ) ;','stmt',4,'p_stmt_println','parser.py',57),
  ('stmt -> WHILE new_label ( expr ) jz block','stmt',7,'p_stmt_while','parser.py',61),
  ('stmt -> IF ( expr ) jz block','stmt',6,'p_stmt_ifelse','parser.py',67),
  ('stmt -> IF ( expr ) jz block ELSE jmp jz_label block','stmt',10,'p_stmt_ifelse','parser.py',68),
  ('jmp -> <empty>','jmp',0,'p_jmp','parser.py',75),
  ('jz -> <empty>','jz',0,'p_jz','parser.py',81),
  ('jz_label -> <empty>','jz_label',0,'p_jz_label','parser.py',88),
  ('new_label -> <empty>','new_label',0,'p_new_label','parser.py',93),
  ('var_declare -> VAR ID = expr ;','var_declare',5,'p_declare','parser.py',99),
  ('var_declare -> VAR ID ;','var_declare',3,'p_declare','parser.py',100),
  ('var_declare -> VAR ID [ NUM ] ;','var_declare',6,'p_declare','parser.py',101),
  ('var_declare -> VAR ID [ NUM ] [ NUM ] ;','var_declare',9,'p_declare','parser.py',102),
  ('stmt -> ID = expr ;','stmt',4,'p_stmt_assign','parser.py',128),
  ('stmt -> expr [ expr ] = expr ;','stmt',7,'p_stmt_assign_arr','parser.py',137),
  ('stmt -> RETURN expr ;','stmt',3,'p_stmt_return','parser.py',141),
  ('stmt -> RETURN ;','stmt',2,'p_stmt_return','parser.py',142),
  ('stmt -> PRINTI ( expr ) ;','stmt',5,'p_stmt_printi','parser.py',150),
  ('stmt -> expr ;','stmt',2,'p_stmt_expr','parser.py',154),
  ('expr -> INPUT ( )','expr',3,'p_expr_input','parser.py',161),
  ('expr -> STR ( expr )','expr',4,'p_expr_str','parser.py',165),
  ('expr -> ATOI ( expr )','expr',4,'p_expr_atoi','parser.py',169),
  ('expr -> expr + expr','expr',3,'p_expr_binop','parser.py',173),
  ('expr -> expr - expr','expr',3,'p_expr_binop','parser.py',174),
  ('expr -> expr * expr','expr',3,'p_expr_binop','parser.py',175),
  ('expr -> expr / expr','expr',3,'p_expr_binop','parser.py',176),
  ('expr -> expr % expr','expr',3,'p_expr_binop','parser.py',177),
  ('expr -> expr OR expr','expr',3,'p_expr_binop','parser.py',178),
  ('expr -> expr AND expr','expr',3,'p_expr_binop','parser.py',179),
  ('expr -> expr > expr','expr',3,'p_expr_binop','parser.py',180),
  ('expr -> expr < expr','expr',3,'p_expr_binop','parser.py',181),
  ('expr -> expr GTE expr','expr',3,'p_expr_binop','parser.py',182),
  ('expr -> expr LTE expr','expr',3,'p_expr_binop','parser.py',183),
  ('expr -> expr EQ expr','expr',3,'p_expr_binop','parser.py',184),
  ('expr -> expr NEQ expr','expr',3,'p_expr_binop','parser.py',185),
  ('expr -> expr $ expr','expr',3,'p_expr_binop','parser.py',186),
  ('expr -> ! expr','expr',2,'p_expr_not','parser.py',206),
  ('expr -> - expr','expr',2,'p_expr_neg','parser.py',210),
  ('expr -> ID','expr',1,'p_expr_id','parser.py',215),
  ('expr -> expr [ expr ]','expr',4,'p_expr_ind','parser.py',229),
  ('expr -> STRING','expr',1,'p_expr_string','parser.py',233),
  ('expr -> NUM','expr',1,'p_expr_num','parser.py',237),
  ('expr -> TRUE','expr',1,'p_expr_true','parser.py',241),
  ('expr -> FALSE','expr',1,'p_expr_false','parser.py',245),
  ('expr -> ID ( exprlist )','expr',4,'p_expr_fun','parser.py',249),
  ('expr -> ID ( )','expr',3,'p_expr_fun','parser.py',250),
  ('expr -> ( expr )','expr',3,'p_expr','parser.py',260),
  ('declist -> declist var_declare','declist',2,'p_declist','parser.py',265),
  ('declist -> <empty>','declist',0,'p_declist','parser.py',266),
  ('funlist -> funlist fun','funlist',2,'p_funlist','parser.py',269),
  ('funlist -> <empty>','funlist',0,'p_funlist','parser.py',270),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','parser.py',273),
  ('stmtlist -> <empty>','stmtlist',0,'p_stmtlist','parser.py',274),
  ('idlist -> idlist , ID','idlist',3,'p_idlist','parser.py',277),
  ('idlist -> ID','idlist',1,'p_idlist','parser.py',278),
  ('exprlist -> exprlist , expr','exprlist',3,'p_exprlist','parser.py',285),
  ('exprlist -> expr','exprlist',1,'p_exprlist','parser.py',286),
  ('block -> { stmtlist }','block',3,'p_block','parser.py',289),
  ('block -> stmt','block',1,'p_block','parser.py',290),
]
