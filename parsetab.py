
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programleftANDOREQNEQleftGTELTE><left+-$left*/%leftUMINUS!leftINDEXAND ATOI DEF ELSE EQ GTE ID IF INPUT INTTYPE LTE NEQ NUM OR PRINT PRINTLN RETURN STR STRING STRINGTYPE VAR VOIDTYPE WHILEprogram : declist start funlist entrypoint stmtlist start :entrypoint :fun : DEF fun_name '(' funargs ')' ftype '{' stmtlist '}' fun_name : ID ftype : typestmt : PRINT '(' expr ')' ';' stmt : PRINTLN '(' ')' ';' stmt : WHILE new_label '(' expr ')' jz block stmt : IF '(' expr ')' jz block\n            | IF '(' expr ')' jz block ELSE jmp jz_label block jmp :jz :jz_label :new_label :var_declare : VAR ID '[' NUM ']' type ';' var_declare : VAR ID '[' NUM ']' '[' NUM ']' type ';' var_declare : VAR ID type '=' expr ';'\n                   | VAR ID type ';' stmt : ID '=' expr ';' stmt : expr '[' expr ']' '=' expr ';' stmt : RETURN expr ';' \n            | RETURN ';' stmt : expr ';' expr : INPUT '(' ')' expr : STR '(' expr ')' expr : ATOI '(' expr ')' expr : expr '+' expr \n            | expr '-' expr\n            | expr '*' expr \n            | expr '/' expr\n            | expr '%' expr\n            | expr OR expr\n            | expr AND expr \n            | expr '>' expr \n            | expr '<' expr \n            | expr GTE expr\n            | expr LTE expr \n            | expr EQ expr\n            | expr NEQ expr\n            | expr '$' expr expr : '!' expr expr : '-' expr %prec UMINUS expr : ID expr : expr '[' expr ']' %prec INDEX expr : STRING expr : NUM expr : ID '(' fcall ')' expr : '(' expr ')' type : STRINGTYPEtype : INTTYPEtype : VOIDTYPEtype :  '[' type ']' declist : declist var_declare\n               |funlist : funlist fun \n               |stmtlist : stmtlist stmt \n                | funargs : idlist\n                 |idlist : idlist ',' ID type\n              | ID type fcall : exprlist\n             |exprlist : exprlist ',' expr\n                | expr block : '{' stmtlist '}' \n             | stmt "
    
_lr_action_items = {'VAR':([0,2,4,23,80,114,145,],[-55,5,-54,-19,-18,-16,-17,]),'DEF':([0,2,3,4,6,9,23,80,114,145,150,],[-55,-2,-57,-54,10,-56,-19,-18,-16,-17,-4,]),'PRINT':([0,2,3,4,6,8,9,16,23,24,48,69,80,106,114,118,120,121,131,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,25,-19,-58,-24,-23,-18,-22,-16,-8,-13,-20,-7,-13,25,-59,25,-10,-59,-69,25,-17,-21,-9,-12,25,-4,-14,-68,25,-11,]),'PRINTLN':([0,2,3,4,6,8,9,16,23,24,48,69,80,106,114,118,120,121,131,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,28,-19,-58,-24,-23,-18,-22,-16,-8,-13,-20,-7,-13,28,-59,28,-10,-59,-69,28,-17,-21,-9,-12,28,-4,-14,-68,28,-11,]),'WHILE':([0,2,3,4,6,8,9,16,23,24,48,69,80,106,114,118,120,121,131,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,29,-19,-58,-24,-23,-18,-22,-16,-8,-13,-20,-7,-13,29,-59,29,-10,-59,-69,29,-17,-21,-9,-12,29,-4,-14,-68,29,-11,]),'IF':([0,2,3,4,6,8,9,16,23,24,48,69,80,106,114,118,120,121,131,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,30,-19,-58,-24,-23,-18,-22,-16,-8,-13,-20,-7,-13,30,-59,30,-10,-59,-69,30,-17,-21,-9,-12,30,-4,-14,-68,30,-11,]),'ID':([0,2,3,4,5,6,8,9,10,16,22,23,24,26,32,36,37,40,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,69,71,72,80,81,100,106,111,114,118,120,121,123,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,7,-3,-59,-56,18,31,43,-19,-58,43,43,43,43,77,43,43,-24,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-23,43,43,-18,43,43,-22,128,-16,-8,-13,-20,43,-7,43,-13,31,-59,31,-10,-59,-69,31,-17,-21,-9,-12,31,-4,-14,-68,31,-11,]),'RETURN':([0,2,3,4,6,8,9,16,23,24,48,69,80,106,114,118,120,121,131,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,32,-19,-58,-24,-23,-18,-22,-16,-8,-13,-20,-7,-13,32,-59,32,-10,-59,-69,32,-17,-21,-9,-12,32,-4,-14,-68,32,-11,]),'INPUT':([0,2,3,4,6,8,9,16,22,23,24,26,32,36,37,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,69,71,72,80,81,100,106,114,118,120,121,123,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,33,33,-19,-58,33,33,33,33,33,33,-24,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-23,33,33,-18,33,33,-22,-16,-8,-13,-20,33,-7,33,-13,33,-59,33,-10,-59,-69,33,-17,-21,-9,-12,33,-4,-14,-68,33,-11,]),'STR':([0,2,3,4,6,8,9,16,22,23,24,26,32,36,37,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,69,71,72,80,81,100,106,114,118,120,121,123,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,34,34,-19,-58,34,34,34,34,34,34,-24,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-23,34,34,-18,34,34,-22,-16,-8,-13,-20,34,-7,34,-13,34,-59,34,-10,-59,-69,34,-17,-21,-9,-12,34,-4,-14,-68,34,-11,]),'ATOI':([0,2,3,4,6,8,9,16,22,23,24,26,32,36,37,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,69,71,72,80,81,100,106,114,118,120,121,123,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,35,35,-19,-58,35,35,35,35,35,35,-24,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-23,35,35,-18,35,35,-22,-16,-8,-13,-20,35,-7,35,-13,35,-59,35,-10,-59,-69,35,-17,-21,-9,-12,35,-4,-14,-68,35,-11,]),'!':([0,2,3,4,6,8,9,16,22,23,24,26,32,36,37,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,69,71,72,80,81,100,106,114,118,120,121,123,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,37,37,-19,-58,37,37,37,37,37,37,-24,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-23,37,37,-18,37,37,-22,-16,-8,-13,-20,37,-7,37,-13,37,-59,37,-10,-59,-69,37,-17,-21,-9,-12,37,-4,-14,-68,37,-11,]),'-':([0,2,3,4,6,8,9,16,22,23,24,26,27,31,32,36,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,71,72,73,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,105,106,107,108,109,114,115,117,118,119,120,121,122,123,124,125,130,131,132,133,134,135,136,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,36,36,-19,-58,36,50,-44,36,36,36,-46,-47,-44,50,36,50,36,-24,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,50,-23,36,36,-43,-42,-18,36,50,-49,50,-28,-29,-30,-31,-32,50,50,50,50,50,50,50,50,-41,36,50,50,50,-22,-25,50,50,-16,50,-45,-8,50,-13,-20,-48,36,-26,-27,-45,-7,36,-13,36,50,-59,50,36,-10,-59,-69,36,-17,-21,-9,-12,36,-4,-14,-68,36,-11,]),'STRING':([0,2,3,4,6,8,9,16,22,23,24,26,32,36,37,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,69,71,72,80,81,100,106,114,118,120,121,123,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,38,38,-19,-58,38,38,38,38,38,38,-24,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-23,38,38,-18,38,38,-22,-16,-8,-13,-20,38,-7,38,-13,38,-59,38,-10,-59,-69,38,-17,-21,-9,-12,38,-4,-14,-68,38,-11,]),'NUM':([0,2,3,4,6,8,9,11,16,22,23,24,26,32,36,37,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,69,71,72,78,80,81,100,106,114,118,120,121,123,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,20,39,39,-19,-58,39,39,39,39,39,39,-24,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-23,39,39,113,-18,39,39,-22,-16,-8,-13,-20,39,-7,39,-13,39,-59,39,-10,-59,-69,39,-17,-21,-9,-12,39,-4,-14,-68,39,-11,]),'(':([0,2,3,4,6,8,9,16,17,18,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,69,71,72,80,81,100,106,114,118,120,121,123,131,132,133,134,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,],[-55,-2,-57,-54,-3,-59,-56,26,40,-5,26,-19,-58,45,26,63,-15,65,67,26,70,71,72,26,26,67,26,26,-24,26,26,26,26,26,26,26,26,26,26,26,26,26,26,100,26,26,26,-23,26,26,-18,26,26,-22,-16,-8,-13,-20,26,-7,26,-13,26,-59,26,-10,-59,-69,26,-17,-21,-9,-12,26,-4,-14,-68,26,-11,]),'$end':([0,1,2,3,4,6,8,9,16,23,24,48,69,80,106,114,118,121,131,141,143,145,146,147,150,152,154,],[-55,0,-2,-57,-54,-3,-59,-56,-1,-19,-58,-24,-23,-18,-22,-16,-8,-20,-7,-10,-69,-17,-21,-9,-4,-68,-11,]),'[':([7,11,19,27,31,38,39,41,43,44,46,68,73,74,77,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,110,115,117,119,122,124,125,128,129,130,135,139,],[11,19,19,47,-44,-46,-47,78,-44,81,81,81,-43,-42,19,19,81,-49,81,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,81,81,81,-25,81,81,19,81,-45,81,-48,-26,-27,19,19,-45,81,81,]),'STRINGTYPE':([7,11,19,41,77,78,110,128,129,],[13,13,13,13,13,13,13,13,13,]),'INTTYPE':([7,11,19,41,77,78,110,128,129,],[14,14,14,14,14,14,14,14,14,]),'VOIDTYPE':([7,11,19,41,77,78,110,128,129,],[15,15,15,15,15,15,15,15,15,]),'=':([12,13,14,15,31,42,117,],[22,-50,-51,-52,66,-53,132,]),';':([12,13,14,15,27,31,32,38,39,42,43,44,68,73,74,79,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,107,116,117,122,124,125,130,138,139,],[23,-50,-51,-52,48,-44,69,-46,-47,-53,-44,80,106,-43,-42,114,-49,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,118,121,-25,131,-45,-48,-26,-27,-45,145,146,]),']':([13,14,15,20,21,38,39,42,43,73,74,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,107,113,115,122,124,125,130,],[-50,-51,-52,41,42,-46,-47,-53,-44,-43,-42,-49,117,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-25,129,130,-48,-26,-27,-45,]),',':([13,14,15,38,39,42,43,73,74,76,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,112,122,124,125,130,135,137,],[-50,-51,-52,-46,-47,-53,-44,-43,-42,111,-49,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,123,-67,-25,-63,-48,-26,-27,-45,-66,-62,]),')':([13,14,15,38,39,40,42,43,46,63,67,70,73,74,75,76,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,103,104,105,107,108,109,112,119,122,124,125,130,135,137,],[-50,-51,-52,-46,-47,-61,-53,-44,83,99,-65,107,-43,-42,110,-60,116,-49,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,120,122,-64,-67,-25,124,125,-63,133,-48,-26,-27,-45,-66,-62,]),'{':([13,14,15,42,120,126,127,133,134,140,148,151,153,],[-50,-51,-52,-53,-13,136,-6,-13,142,142,-12,-14,142,]),'}':([24,48,69,106,118,121,131,136,141,142,143,144,146,147,149,152,154,],[-58,-24,-23,-22,-8,-20,-7,-59,-10,-59,-69,150,-21,-9,152,-68,-11,]),'+':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[49,-44,-46,-47,-44,49,49,49,-43,-42,49,-49,49,-28,-29,-30,-31,-32,49,49,49,49,49,49,49,49,-41,49,49,49,-25,49,49,49,-45,49,-48,-26,-27,-45,49,49,]),'*':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[51,-44,-46,-47,-44,51,51,51,-43,-42,51,-49,51,51,51,-30,-31,-32,51,51,51,51,51,51,51,51,51,51,51,51,-25,51,51,51,-45,51,-48,-26,-27,-45,51,51,]),'/':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[52,-44,-46,-47,-44,52,52,52,-43,-42,52,-49,52,52,52,-30,-31,-32,52,52,52,52,52,52,52,52,52,52,52,52,-25,52,52,52,-45,52,-48,-26,-27,-45,52,52,]),'%':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[53,-44,-46,-47,-44,53,53,53,-43,-42,53,-49,53,53,53,-30,-31,-32,53,53,53,53,53,53,53,53,53,53,53,53,-25,53,53,53,-45,53,-48,-26,-27,-45,53,53,]),'OR':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[54,-44,-46,-47,-44,54,54,54,-43,-42,54,-49,54,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,54,54,54,-25,54,54,54,-45,54,-48,-26,-27,-45,54,54,]),'AND':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[55,-44,-46,-47,-44,55,55,55,-43,-42,55,-49,55,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,55,55,55,-25,55,55,55,-45,55,-48,-26,-27,-45,55,55,]),'>':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[56,-44,-46,-47,-44,56,56,56,-43,-42,56,-49,56,-28,-29,-30,-31,-32,56,56,-35,-36,-37,-38,56,56,-41,56,56,56,-25,56,56,56,-45,56,-48,-26,-27,-45,56,56,]),'<':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[57,-44,-46,-47,-44,57,57,57,-43,-42,57,-49,57,-28,-29,-30,-31,-32,57,57,-35,-36,-37,-38,57,57,-41,57,57,57,-25,57,57,57,-45,57,-48,-26,-27,-45,57,57,]),'GTE':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[58,-44,-46,-47,-44,58,58,58,-43,-42,58,-49,58,-28,-29,-30,-31,-32,58,58,-35,-36,-37,-38,58,58,-41,58,58,58,-25,58,58,58,-45,58,-48,-26,-27,-45,58,58,]),'LTE':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[59,-44,-46,-47,-44,59,59,59,-43,-42,59,-49,59,-28,-29,-30,-31,-32,59,59,-35,-36,-37,-38,59,59,-41,59,59,59,-25,59,59,59,-45,59,-48,-26,-27,-45,59,59,]),'EQ':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[60,-44,-46,-47,-44,60,60,60,-43,-42,60,-49,60,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,60,60,60,-25,60,60,60,-45,60,-48,-26,-27,-45,60,60,]),'NEQ':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[61,-44,-46,-47,-44,61,61,61,-43,-42,61,-49,61,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,61,61,61,-25,61,61,61,-45,61,-48,-26,-27,-45,61,61,]),'$':([27,31,38,39,43,44,46,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,115,117,119,122,124,125,130,135,139,],[62,-44,-46,-47,-44,62,62,62,-43,-42,62,-49,62,-28,-29,-30,-31,-32,62,62,62,62,62,62,62,62,-41,62,62,62,-25,62,62,62,-45,62,-48,-26,-27,-45,62,62,]),'ELSE':([48,69,106,118,121,131,141,143,146,147,152,154,],[-24,-23,-22,-8,-20,-7,148,-69,-21,-9,-68,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'start':([2,],[3,]),'var_declare':([2,],[4,]),'funlist':([3,],[6,]),'entrypoint':([6,],[8,]),'fun':([6,],[9,]),'type':([7,11,19,41,77,78,110,128,129,],[12,21,21,79,112,21,127,137,138,]),'stmtlist':([8,136,142,],[16,144,149,]),'fun_name':([10,],[17,]),'stmt':([16,134,140,144,149,153,],[24,143,143,24,24,143,]),'expr':([16,22,26,32,36,37,45,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,71,72,81,100,123,132,134,140,144,149,153,],[27,44,46,68,73,74,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,105,108,109,115,119,135,139,27,27,27,27,27,]),'new_label':([29,],[64,]),'funargs':([40,],[75,]),'idlist':([40,],[76,]),'fcall':([67,],[103,]),'exprlist':([67,],[104,]),'ftype':([110,],[126,]),'jz':([120,133,],[134,140,]),'block':([134,140,153,],[141,147,154,]),'jmp':([148,],[151,]),'jz_label':([151,],[153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist start funlist entrypoint stmtlist','program',5,'p_program','parser.py',22),
  ('start -> <empty>','start',0,'p_start','parser.py',27),
  ('entrypoint -> <empty>','entrypoint',0,'p_entrypoint','parser.py',32),
  ('fun -> DEF fun_name ( funargs ) ftype { stmtlist }','fun',9,'p_fun','parser.py',37),
  ('fun_name -> ID','fun_name',1,'p_fun_name','parser.py',48),
  ('ftype -> type','ftype',1,'p_ftype','parser.py',59),
  ('stmt -> PRINT ( expr ) ;','stmt',5,'p_stmt_print','parser.py',67),
  ('stmt -> PRINTLN ( ) ;','stmt',4,'p_stmt_println','parser.py',78),
  ('stmt -> WHILE new_label ( expr ) jz block','stmt',7,'p_stmt_while','parser.py',83),
  ('stmt -> IF ( expr ) jz block','stmt',6,'p_stmt_ifelse','parser.py',93),
  ('stmt -> IF ( expr ) jz block ELSE jmp jz_label block','stmt',10,'p_stmt_ifelse','parser.py',94),
  ('jmp -> <empty>','jmp',0,'p_jmp','parser.py',105),
  ('jz -> <empty>','jz',0,'p_jz','parser.py',112),
  ('jz_label -> <empty>','jz_label',0,'p_jz_label','parser.py',120),
  ('new_label -> <empty>','new_label',0,'p_new_label','parser.py',125),
  ('var_declare -> VAR ID [ NUM ] type ;','var_declare',7,'p_declare_arr1','parser.py',132),
  ('var_declare -> VAR ID [ NUM ] [ NUM ] type ;','var_declare',10,'p_declare_arr2','parser.py',142),
  ('var_declare -> VAR ID type = expr ;','var_declare',6,'p_declare_var','parser.py',160),
  ('var_declare -> VAR ID type ;','var_declare',4,'p_declare_var','parser.py',161),
  ('stmt -> ID = expr ;','stmt',4,'p_stmt_assign','parser.py',177),
  ('stmt -> expr [ expr ] = expr ;','stmt',7,'p_stmt_assign_arr','parser.py',191),
  ('stmt -> RETURN expr ;','stmt',3,'p_stmt_return','parser.py',200),
  ('stmt -> RETURN ;','stmt',2,'p_stmt_return','parser.py',201),
  ('stmt -> expr ;','stmt',2,'p_stmt_expr','parser.py',216),
  ('expr -> INPUT ( )','expr',3,'p_expr_input','parser.py',224),
  ('expr -> STR ( expr )','expr',4,'p_expr_str','parser.py',230),
  ('expr -> ATOI ( expr )','expr',4,'p_expr_atoi','parser.py',236),
  ('expr -> expr + expr','expr',3,'p_expr_binop','parser.py',247),
  ('expr -> expr - expr','expr',3,'p_expr_binop','parser.py',248),
  ('expr -> expr * expr','expr',3,'p_expr_binop','parser.py',249),
  ('expr -> expr / expr','expr',3,'p_expr_binop','parser.py',250),
  ('expr -> expr % expr','expr',3,'p_expr_binop','parser.py',251),
  ('expr -> expr OR expr','expr',3,'p_expr_binop','parser.py',252),
  ('expr -> expr AND expr','expr',3,'p_expr_binop','parser.py',253),
  ('expr -> expr > expr','expr',3,'p_expr_binop','parser.py',254),
  ('expr -> expr < expr','expr',3,'p_expr_binop','parser.py',255),
  ('expr -> expr GTE expr','expr',3,'p_expr_binop','parser.py',256),
  ('expr -> expr LTE expr','expr',3,'p_expr_binop','parser.py',257),
  ('expr -> expr EQ expr','expr',3,'p_expr_binop','parser.py',258),
  ('expr -> expr NEQ expr','expr',3,'p_expr_binop','parser.py',259),
  ('expr -> expr $ expr','expr',3,'p_expr_binop','parser.py',260),
  ('expr -> ! expr','expr',2,'p_expr_not','parser.py',290),
  ('expr -> - expr','expr',2,'p_expr_neg','parser.py',300),
  ('expr -> ID','expr',1,'p_expr_id','parser.py',311),
  ('expr -> expr [ expr ]','expr',4,'p_expr_ind','parser.py',327),
  ('expr -> STRING','expr',1,'p_expr_string','parser.py',337),
  ('expr -> NUM','expr',1,'p_expr_num','parser.py',343),
  ('expr -> ID ( fcall )','expr',4,'p_expr_fun','parser.py',349),
  ('expr -> ( expr )','expr',3,'p_expr','parser.py',363),
  ('type -> STRINGTYPE','type',1,'p_type_string','parser.py',370),
  ('type -> INTTYPE','type',1,'p_type_int','parser.py',375),
  ('type -> VOIDTYPE','type',1,'p_type_void','parser.py',380),
  ('type -> [ type ]','type',3,'p_type_arr','parser.py',384),
  ('declist -> declist var_declare','declist',2,'p_declist','parser.py',389),
  ('declist -> <empty>','declist',0,'p_declist','parser.py',390),
  ('funlist -> funlist fun','funlist',2,'p_funlist','parser.py',394),
  ('funlist -> <empty>','funlist',0,'p_funlist','parser.py',395),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','parser.py',399),
  ('stmtlist -> <empty>','stmtlist',0,'p_stmtlist','parser.py',400),
  ('funargs -> idlist','funargs',1,'p_funargs','parser.py',404),
  ('funargs -> <empty>','funargs',0,'p_funargs','parser.py',405),
  ('idlist -> idlist , ID type','idlist',4,'p_idlist','parser.py',410),
  ('idlist -> ID type','idlist',2,'p_idlist','parser.py',411),
  ('fcall -> exprlist','fcall',1,'p_fcall','parser.py',421),
  ('fcall -> <empty>','fcall',0,'p_fcall','parser.py',422),
  ('exprlist -> exprlist , expr','exprlist',3,'p_exprlist','parser.py',427),
  ('exprlist -> expr','exprlist',1,'p_exprlist','parser.py',428),
  ('block -> { stmtlist }','block',3,'p_block','parser.py',436),
  ('block -> stmt','block',1,'p_block','parser.py',437),
]
