
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programleftANDOREQNEQleftGTELTE><left+-$left*/%leftUMINUS!leftINDEXAND ATOI DEF ELSE EQ FALSE GTE ID IF INPUT LTE NEQ NUM OR PRINT PRINTI PRINTLN RETURN STR STRING TRUE VAR WHILEprogram : declist start funlist entrypoint stmtlist start :entrypoint :fun : DEF fun_name '(' idlist ')' block \n           | DEF fun_name '(' ')' block fun_name : ID stmt : PRINT '(' expr ')' ';' stmt : PRINTLN '(' ')' ';' stmt : WHILE new_label '(' expr ')' jz block stmt : IF '(' expr ')' jz block \n            | IF '(' expr ')' jz block ELSE jmp jz_label block jmp :jz :jz_label :new_label :var_declare : VAR ID '=' expr ';' \n                   | VAR ID ';' var_declare : VAR ID '[' NUM ']' ';' stmt : ID '=' expr ';' stmt : expr '[' expr ']' '=' expr ';' stmt : RETURN expr ';' \n            | RETURN ';' stmt : PRINTI '(' expr ')' ';' stmt : expr ';' expr : INPUT '(' ')' expr : STR '(' expr ')' expr : ATOI '(' expr ')' expr : expr '+' expr \n            | expr '-' expr\n            | expr '*' expr \n            | expr '/' expr\n            | expr '%' expr\n            | expr OR expr\n            | expr AND expr \n            | expr '>' expr \n            | expr '<' expr \n            | expr GTE expr\n            | expr LTE expr \n            | expr EQ expr\n            | expr NEQ expr\n            | expr '$' expr expr : '!' expr expr : '-' expr %prec UMINUS expr : ID expr : expr '[' expr ']' %prec INDEX expr : STRING expr : NUM expr : TRUE expr : FALSE expr : ID '(' exprlist ')' \n            | ID '(' ')' expr : '(' expr ')' declist : declist var_declare\n               |funlist : funlist fun \n               |stmtlist : stmtlist stmt \n                |idlist : idlist ',' ID\n              | ID exprlist : exprlist ',' expr\n                | expr block : '{' stmtlist '}' \n             | stmt "
    
_lr_action_items = {'VAR':([0,2,4,12,41,99,],[-54,5,-53,-17,-16,-18,]),'DEF':([0,2,3,4,6,9,12,41,66,72,99,106,110,112,120,123,125,129,133,134,137,138,139,143,],[-54,-2,-56,-53,10,-55,-17,-16,-24,-22,-18,-21,-5,-64,-8,-19,-4,-7,-23,-63,-10,-20,-9,-11,]),'PRINT':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,99,106,108,110,111,112,120,122,123,125,127,129,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,-17,31,-57,-16,-24,-22,31,-18,-21,31,-5,-58,-64,-8,-13,-19,-4,31,-7,-13,31,-23,-63,31,-10,-20,-9,-12,-14,31,-11,]),'PRINTLN':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,99,106,108,110,111,112,120,122,123,125,127,129,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,-17,33,-57,-16,-24,-22,33,-18,-21,33,-5,-58,-64,-8,-13,-19,-4,33,-7,-13,33,-23,-63,33,-10,-20,-9,-12,-14,33,-11,]),'WHILE':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,99,106,108,110,111,112,120,122,123,125,127,129,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,-17,34,-57,-16,-24,-22,34,-18,-21,34,-5,-58,-64,-8,-13,-19,-4,34,-7,-13,34,-23,-63,34,-10,-20,-9,-12,-14,34,-11,]),'IF':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,99,106,108,110,111,112,120,122,123,125,127,129,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,-17,35,-57,-16,-24,-22,35,-18,-21,35,-5,-58,-64,-8,-13,-19,-4,35,-7,-13,35,-23,-63,35,-10,-20,-9,-12,-14,35,-11,]),'ID':([0,2,3,4,5,6,8,9,10,11,12,14,20,23,24,30,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,99,103,106,108,109,110,111,112,114,120,122,123,125,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,7,-3,-58,-55,16,17,-17,36,17,17,17,-57,17,76,17,-16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-24,17,17,-22,17,36,-18,17,-21,36,126,-5,-58,-64,17,-8,-13,-19,-4,36,-7,17,-13,36,-23,-63,36,-10,-20,-9,-12,-14,36,-11,]),'RETURN':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,99,106,108,110,111,112,120,122,123,125,127,129,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,-17,37,-57,-16,-24,-22,37,-18,-21,37,-5,-58,-64,-8,-13,-19,-4,37,-7,-13,37,-23,-63,37,-10,-20,-9,-12,-14,37,-11,]),'PRINTI':([0,2,3,4,6,8,9,12,14,30,41,66,72,75,99,106,108,110,111,112,120,122,123,125,127,129,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,-17,38,-57,-16,-24,-22,38,-18,-21,38,-5,-58,-64,-8,-13,-19,-4,38,-7,-13,38,-23,-63,38,-10,-20,-9,-12,-14,38,-11,]),'INPUT':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,99,103,106,108,110,111,112,114,120,122,123,125,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,19,-17,19,19,19,19,-57,19,19,-16,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-24,19,19,-22,19,19,-18,19,-21,19,-5,-58,-64,19,-8,-13,-19,-4,19,-7,19,-13,19,-23,-63,19,-10,-20,-9,-12,-14,19,-11,]),'STR':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,99,103,106,108,110,111,112,114,120,122,123,125,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,21,-17,21,21,21,21,-57,21,21,-16,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-24,21,21,-22,21,21,-18,21,-21,21,-5,-58,-64,21,-8,-13,-19,-4,21,-7,21,-13,21,-23,-63,21,-10,-20,-9,-12,-14,21,-11,]),'ATOI':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,99,103,106,108,110,111,112,114,120,122,123,125,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,22,-17,22,22,22,22,-57,22,22,-16,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-24,22,22,-22,22,22,-18,22,-21,22,-5,-58,-64,22,-8,-13,-19,-4,22,-7,22,-13,22,-23,-63,22,-10,-20,-9,-12,-14,22,-11,]),'!':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,99,103,106,108,110,111,112,114,120,122,123,125,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,24,-17,24,24,24,24,-57,24,24,-16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-24,24,24,-22,24,24,-18,24,-21,24,-5,-58,-64,24,-8,-13,-19,-4,24,-7,24,-13,24,-23,-63,24,-10,-20,-9,-12,-14,24,-11,]),'-':([0,2,3,4,6,8,9,11,12,14,17,18,20,23,24,25,26,27,28,30,32,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,64,65,66,69,70,71,72,73,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,110,111,112,113,114,115,116,117,119,120,121,122,123,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,23,-17,23,-44,43,23,23,23,-46,-47,-48,-49,-57,43,-44,23,23,-16,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,43,23,23,-43,-42,23,23,-24,23,23,43,-22,23,23,-51,43,-28,-29,-30,-31,-32,43,43,43,43,43,43,43,43,-41,43,-25,-52,43,43,-18,43,43,23,43,43,-21,43,23,-5,-58,-64,-50,23,-45,-26,-27,-45,-8,43,-13,-19,-4,23,43,-7,23,-13,23,-23,-63,43,23,-10,-20,-9,-12,-14,23,-11,]),'STRING':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,99,103,106,108,110,111,112,114,120,122,123,125,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,25,-17,25,25,25,25,-57,25,25,-16,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-24,25,25,-22,25,25,-18,25,-21,25,-5,-58,-64,25,-8,-13,-19,-4,25,-7,25,-13,25,-23,-63,25,-10,-20,-9,-12,-14,25,-11,]),'NUM':([0,2,3,4,6,8,9,11,12,13,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,99,103,106,108,110,111,112,114,120,122,123,125,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,26,-17,29,26,26,26,26,-57,26,26,-16,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-24,26,26,-22,26,26,-18,26,-21,26,-5,-58,-64,26,-8,-13,-19,-4,26,-7,26,-13,26,-23,-63,26,-10,-20,-9,-12,-14,26,-11,]),'TRUE':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,99,103,106,108,110,111,112,114,120,122,123,125,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,27,-17,27,27,27,27,-57,27,27,-16,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-24,27,27,-22,27,27,-18,27,-21,27,-5,-58,-64,27,-8,-13,-19,-4,27,-7,27,-13,27,-23,-63,27,-10,-20,-9,-12,-14,27,-11,]),'FALSE':([0,2,3,4,6,8,9,11,12,14,20,23,24,30,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,69,70,72,73,75,99,103,106,108,110,111,112,114,120,122,123,125,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,28,-17,28,28,28,28,-57,28,28,-16,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-24,28,28,-22,28,28,-18,28,-21,28,-5,-58,-64,28,-8,-13,-19,-4,28,-7,28,-13,28,-23,-63,28,-10,-20,-9,-12,-14,28,-11,]),'(':([0,2,3,4,6,8,9,11,12,14,15,16,17,19,20,21,22,23,24,30,31,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,66,68,69,70,72,73,75,99,103,106,108,110,111,112,114,120,122,123,125,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,],[-54,-2,-56,-53,-3,-58,-55,20,-17,20,39,-6,40,57,20,59,60,20,20,-57,64,67,-15,69,40,20,73,20,-16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-24,103,20,20,-22,20,20,-18,20,-21,20,-5,-58,-64,20,-8,-13,-19,-4,20,-7,20,-13,20,-23,-63,20,-10,-20,-9,-12,-14,20,-11,]),'$end':([0,1,2,3,4,6,8,9,12,14,30,41,66,72,99,106,110,112,120,123,125,129,133,134,137,138,139,143,],[-54,0,-2,-56,-53,-3,-58,-55,-17,-1,-57,-16,-24,-22,-18,-21,-5,-64,-8,-19,-4,-7,-23,-63,-10,-20,-9,-11,]),'=':([7,36,119,],[11,70,130,]),';':([7,17,18,25,26,27,28,32,36,37,61,62,63,71,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,102,105,113,115,116,117,118,119,124,135,],[12,-44,41,-46,-47,-48,-49,66,-44,72,-43,-42,99,106,-51,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-25,-52,120,123,-50,-45,-26,-27,129,-45,133,138,]),'[':([7,17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[13,-44,56,-46,-47,-48,-49,65,-44,56,-43,-42,56,-51,56,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,56,-25,-52,56,56,56,56,56,56,56,-50,-45,-26,-27,-45,56,56,56,]),'+':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,42,-46,-47,-48,-49,42,-44,42,-43,-42,42,-51,42,-28,-29,-30,-31,-32,42,42,42,42,42,42,42,42,-41,42,-25,-52,42,42,42,42,42,42,42,-50,-45,-26,-27,-45,42,42,42,]),'*':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,44,-46,-47,-48,-49,44,-44,44,-43,-42,44,-51,44,44,44,-30,-31,-32,44,44,44,44,44,44,44,44,44,44,-25,-52,44,44,44,44,44,44,44,-50,-45,-26,-27,-45,44,44,44,]),'/':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,45,-46,-47,-48,-49,45,-44,45,-43,-42,45,-51,45,45,45,-30,-31,-32,45,45,45,45,45,45,45,45,45,45,-25,-52,45,45,45,45,45,45,45,-50,-45,-26,-27,-45,45,45,45,]),'%':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,46,-46,-47,-48,-49,46,-44,46,-43,-42,46,-51,46,46,46,-30,-31,-32,46,46,46,46,46,46,46,46,46,46,-25,-52,46,46,46,46,46,46,46,-50,-45,-26,-27,-45,46,46,46,]),'OR':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,47,-46,-47,-48,-49,47,-44,47,-43,-42,47,-51,47,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,47,-25,-52,47,47,47,47,47,47,47,-50,-45,-26,-27,-45,47,47,47,]),'AND':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,48,-46,-47,-48,-49,48,-44,48,-43,-42,48,-51,48,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,48,-25,-52,48,48,48,48,48,48,48,-50,-45,-26,-27,-45,48,48,48,]),'>':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,49,-46,-47,-48,-49,49,-44,49,-43,-42,49,-51,49,-28,-29,-30,-31,-32,49,49,-35,-36,-37,-38,49,49,-41,49,-25,-52,49,49,49,49,49,49,49,-50,-45,-26,-27,-45,49,49,49,]),'<':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,50,-46,-47,-48,-49,50,-44,50,-43,-42,50,-51,50,-28,-29,-30,-31,-32,50,50,-35,-36,-37,-38,50,50,-41,50,-25,-52,50,50,50,50,50,50,50,-50,-45,-26,-27,-45,50,50,50,]),'GTE':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,51,-46,-47,-48,-49,51,-44,51,-43,-42,51,-51,51,-28,-29,-30,-31,-32,51,51,-35,-36,-37,-38,51,51,-41,51,-25,-52,51,51,51,51,51,51,51,-50,-45,-26,-27,-45,51,51,51,]),'LTE':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,52,-46,-47,-48,-49,52,-44,52,-43,-42,52,-51,52,-28,-29,-30,-31,-32,52,52,-35,-36,-37,-38,52,52,-41,52,-25,-52,52,52,52,52,52,52,52,-50,-45,-26,-27,-45,52,52,52,]),'EQ':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,53,-46,-47,-48,-49,53,-44,53,-43,-42,53,-51,53,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,53,-25,-52,53,53,53,53,53,53,53,-50,-45,-26,-27,-45,53,53,53,]),'NEQ':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,54,-46,-47,-48,-49,54,-44,54,-43,-42,54,-51,54,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,54,-25,-52,54,54,54,54,54,54,54,-50,-45,-26,-27,-45,54,54,54,]),'$':([17,18,25,26,27,28,32,36,58,61,62,71,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,107,113,115,116,117,119,121,128,135,],[-44,55,-46,-47,-48,-49,55,-44,55,-43,-42,55,-51,55,-28,-29,-30,-31,-32,55,55,55,55,55,55,55,55,-41,55,-25,-52,55,55,55,55,55,55,55,-50,-45,-26,-27,-45,55,55,55,]),')':([17,25,26,27,28,39,40,57,58,61,62,67,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,100,104,107,113,115,116,117,121,126,128,],[-44,-46,-47,-48,-49,75,78,95,96,-43,-42,102,108,-60,113,-51,-62,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-25,-52,116,117,118,122,124,-50,-45,-26,-27,131,-59,-61,]),',':([17,25,26,27,28,61,62,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,113,115,116,117,126,128,],[-44,-46,-47,-48,-49,-43,-42,109,-60,114,-51,-62,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-25,-52,-50,-45,-26,-27,-59,-61,]),']':([17,25,26,27,28,29,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,101,113,115,116,117,],[-44,-46,-47,-48,-49,63,-43,-42,-51,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,115,-25,-52,119,-50,-45,-26,-27,]),'}':([30,66,72,106,111,112,120,123,127,129,133,134,137,138,139,143,],[-57,-24,-22,-21,-58,-64,-8,-19,134,-7,-23,-63,-10,-20,-9,-11,]),'ELSE':([66,72,106,112,120,123,129,133,134,137,138,139,143,],[-24,-22,-21,-64,-8,-19,-7,-23,-63,140,-20,-9,-11,]),'{':([75,108,122,131,132,136,140,141,142,],[111,111,-13,-13,111,111,-12,-14,111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'start':([2,],[3,]),'var_declare':([2,],[4,]),'funlist':([3,],[6,]),'entrypoint':([6,],[8,]),'fun':([6,],[9,]),'stmtlist':([8,111,],[14,127,]),'fun_name':([10,],[15,]),'expr':([11,14,20,23,24,37,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,64,65,69,70,73,75,103,108,114,127,130,132,136,142,],[18,32,58,61,62,71,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,100,101,104,105,107,32,121,32,128,32,135,32,32,32,]),'stmt':([14,75,108,127,132,136,142,],[30,112,112,30,112,112,112,]),'new_label':([34,],[68,]),'idlist':([39,],[74,]),'exprlist':([40,],[77,]),'block':([75,108,132,136,142,],[110,125,137,139,143,]),'jz':([122,131,],[132,136,]),'jmp':([140,],[141,]),'jz_label':([141,],[142,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist start funlist entrypoint stmtlist','program',5,'p_program','parser.py',22),
  ('start -> <empty>','start',0,'p_start','parser.py',26),
  ('entrypoint -> <empty>','entrypoint',0,'p_entrypoint','parser.py',30),
  ('fun -> DEF fun_name ( idlist ) block','fun',6,'p_fun','parser.py',34),
  ('fun -> DEF fun_name ( ) block','fun',5,'p_fun','parser.py',35),
  ('fun_name -> ID','fun_name',1,'p_fun_name','parser.py',45),
  ('stmt -> PRINT ( expr ) ;','stmt',5,'p_stmt_print','parser.py',53),
  ('stmt -> PRINTLN ( ) ;','stmt',4,'p_stmt_println','parser.py',57),
  ('stmt -> WHILE new_label ( expr ) jz block','stmt',7,'p_stmt_while','parser.py',61),
  ('stmt -> IF ( expr ) jz block','stmt',6,'p_stmt_ifelse','parser.py',67),
  ('stmt -> IF ( expr ) jz block ELSE jmp jz_label block','stmt',10,'p_stmt_ifelse','parser.py',68),
  ('jmp -> <empty>','jmp',0,'p_jmp','parser.py',75),
  ('jz -> <empty>','jz',0,'p_jz','parser.py',81),
  ('jz_label -> <empty>','jz_label',0,'p_jz_label','parser.py',88),
  ('new_label -> <empty>','new_label',0,'p_new_label','parser.py',93),
  ('var_declare -> VAR ID = expr ;','var_declare',5,'p_declare','parser.py',99),
  ('var_declare -> VAR ID ;','var_declare',3,'p_declare','parser.py',100),
  ('var_declare -> VAR ID [ NUM ] ;','var_declare',6,'p_declare_array','parser.py',110),
  ('stmt -> ID = expr ;','stmt',4,'p_stmt_assign','parser.py',121),
  ('stmt -> expr [ expr ] = expr ;','stmt',7,'p_stmt_assign_arr','parser.py',130),
  ('stmt -> RETURN expr ;','stmt',3,'p_stmt_return','parser.py',134),
  ('stmt -> RETURN ;','stmt',2,'p_stmt_return','parser.py',135),
  ('stmt -> PRINTI ( expr ) ;','stmt',5,'p_stmt_printi','parser.py',143),
  ('stmt -> expr ;','stmt',2,'p_stmt_expr','parser.py',147),
  ('expr -> INPUT ( )','expr',3,'p_expr_input','parser.py',155),
  ('expr -> STR ( expr )','expr',4,'p_expr_str','parser.py',159),
  ('expr -> ATOI ( expr )','expr',4,'p_expr_atoi','parser.py',163),
  ('expr -> expr + expr','expr',3,'p_expr_binop','parser.py',167),
  ('expr -> expr - expr','expr',3,'p_expr_binop','parser.py',168),
  ('expr -> expr * expr','expr',3,'p_expr_binop','parser.py',169),
  ('expr -> expr / expr','expr',3,'p_expr_binop','parser.py',170),
  ('expr -> expr % expr','expr',3,'p_expr_binop','parser.py',171),
  ('expr -> expr OR expr','expr',3,'p_expr_binop','parser.py',172),
  ('expr -> expr AND expr','expr',3,'p_expr_binop','parser.py',173),
  ('expr -> expr > expr','expr',3,'p_expr_binop','parser.py',174),
  ('expr -> expr < expr','expr',3,'p_expr_binop','parser.py',175),
  ('expr -> expr GTE expr','expr',3,'p_expr_binop','parser.py',176),
  ('expr -> expr LTE expr','expr',3,'p_expr_binop','parser.py',177),
  ('expr -> expr EQ expr','expr',3,'p_expr_binop','parser.py',178),
  ('expr -> expr NEQ expr','expr',3,'p_expr_binop','parser.py',179),
  ('expr -> expr $ expr','expr',3,'p_expr_binop','parser.py',180),
  ('expr -> ! expr','expr',2,'p_expr_not','parser.py',200),
  ('expr -> - expr','expr',2,'p_expr_neg','parser.py',204),
  ('expr -> ID','expr',1,'p_expr_id','parser.py',209),
  ('expr -> expr [ expr ]','expr',4,'p_expr_ind','parser.py',218),
  ('expr -> STRING','expr',1,'p_expr_string','parser.py',222),
  ('expr -> NUM','expr',1,'p_expr_num','parser.py',226),
  ('expr -> TRUE','expr',1,'p_expr_true','parser.py',230),
  ('expr -> FALSE','expr',1,'p_expr_false','parser.py',234),
  ('expr -> ID ( exprlist )','expr',4,'p_expr_fun','parser.py',238),
  ('expr -> ID ( )','expr',3,'p_expr_fun','parser.py',239),
  ('expr -> ( expr )','expr',3,'p_expr','parser.py',249),
  ('declist -> declist var_declare','declist',2,'p_declist','parser.py',254),
  ('declist -> <empty>','declist',0,'p_declist','parser.py',255),
  ('funlist -> funlist fun','funlist',2,'p_funlist','parser.py',258),
  ('funlist -> <empty>','funlist',0,'p_funlist','parser.py',259),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','parser.py',262),
  ('stmtlist -> <empty>','stmtlist',0,'p_stmtlist','parser.py',263),
  ('idlist -> idlist , ID','idlist',3,'p_idlist','parser.py',266),
  ('idlist -> ID','idlist',1,'p_idlist','parser.py',267),
  ('exprlist -> exprlist , expr','exprlist',3,'p_exprlist','parser.py',274),
  ('exprlist -> expr','exprlist',1,'p_exprlist','parser.py',275),
  ('block -> { stmtlist }','block',3,'p_block','parser.py',278),
  ('block -> stmt','block',1,'p_block','parser.py',279),
]
