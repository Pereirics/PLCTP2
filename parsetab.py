
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programleftANDOREQNEQleftGTELTE><left+-$left*/%leftUMINUS!leftINDEXAND ATOI DEF ELSE EQ FALSE GTE ID IF INPUT LTE NEQ NUM OR PRINT PRINTI PRINTLN RETURN STR STRING TRUE VAR WHILEprogram : declist start funlist entrypoint stmtlist start :entrypoint :fun : DEF fun_name '(' idlist ')' block \n           | DEF fun_name '(' ')' block fun_name : ID stmt : PRINT '(' expr ')' ';' stmt : PRINTLN '(' ')' ';' stmt : WHILE new_label '(' expr ')' jz block stmt : IF '(' expr ')' jz block \n            | IF '(' expr ')' jz block ELSE jmp jz_label block jmp :jz :jz_label :new_label :var_declare : VAR ID '=' expr ';' \n                   | VAR ID ';' var_declare : VAR ID '[' NUM ']' ';' stmt : ID '=' expr ';' stmt : arr_id '[' expr ']' add '=' expr ';' add :arr_id : ID stmt : RETURN expr ';' \n            | RETURN ';' stmt : PRINTI '(' expr ')' ';' stmt : expr ';' expr : INPUT '(' ')' expr : STR '(' expr ')' expr : ATOI '(' expr ')' expr : expr '+' expr \n            | expr '-' expr\n            | expr '*' expr \n            | expr '/' expr\n            | expr '%' expr\n            | expr OR expr\n            | expr AND expr \n            | expr '>' expr \n            | expr '<' expr \n            | expr GTE expr\n            | expr LTE expr \n            | expr EQ expr\n            | expr NEQ expr\n            | expr '$' expr expr : '!' expr expr : '-' expr %prec UMINUS expr : ID expr : arr_id '[' expr ']' %prec INDEX expr : STRING expr : NUM expr : TRUE expr : FALSE expr : ID '(' exprlist ')' \n            | ID '(' ')' expr : '(' expr ')' declist : declist var_declare\n               |funlist : funlist fun \n               |stmtlist : stmtlist stmt \n                |idlist : idlist ',' ID\n              | ID exprlist : exprlist ',' expr\n                | expr block : '{' stmtlist '}' \n             | stmt "
    
_lr_action_items = {'VAR':([0,2,4,12,43,101,],[-56,5,-55,-17,-16,-18,]),'DEF':([0,2,3,4,6,9,12,43,67,74,101,108,112,114,121,124,127,131,135,136,138,140,144,146,],[-56,-2,-58,-55,10,-57,-17,-16,-26,-24,-18,-23,-5,-66,-8,-19,-4,-7,-25,-65,-10,-9,-20,-11,]),'PRINT':([0,2,3,4,6,8,9,12,14,31,43,67,74,77,101,108,110,112,113,114,121,123,124,127,129,131,132,133,135,136,137,138,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,-17,32,-59,-16,-26,-24,32,-18,-23,32,-5,-60,-66,-8,-13,-19,-4,32,-7,-13,32,-25,-65,32,-10,-9,-12,-14,-20,32,-11,]),'PRINTLN':([0,2,3,4,6,8,9,12,14,31,43,67,74,77,101,108,110,112,113,114,121,123,124,127,129,131,132,133,135,136,137,138,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,-17,34,-59,-16,-26,-24,34,-18,-23,34,-5,-60,-66,-8,-13,-19,-4,34,-7,-13,34,-25,-65,34,-10,-9,-12,-14,-20,34,-11,]),'WHILE':([0,2,3,4,6,8,9,12,14,31,43,67,74,77,101,108,110,112,113,114,121,123,124,127,129,131,132,133,135,136,137,138,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,-17,35,-59,-16,-26,-24,35,-18,-23,35,-5,-60,-66,-8,-13,-19,-4,35,-7,-13,35,-25,-65,35,-10,-9,-12,-14,-20,35,-11,]),'IF':([0,2,3,4,6,8,9,12,14,31,43,67,74,77,101,108,110,112,113,114,121,123,124,127,129,131,132,133,135,136,137,138,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,-17,36,-59,-16,-26,-24,36,-18,-23,36,-5,-60,-66,-8,-13,-19,-4,36,-7,-13,36,-25,-65,36,-10,-9,-12,-14,-20,36,-11,]),'ID':([0,2,3,4,5,6,8,9,10,11,12,14,20,23,24,31,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,67,70,71,72,74,75,77,101,104,108,110,111,112,113,114,116,121,123,124,127,129,131,132,133,135,136,137,138,139,140,141,143,144,145,146,],[-56,-2,-58,-55,7,-3,-60,-57,16,17,-17,37,17,17,17,-59,17,78,17,-16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-26,17,17,17,-24,17,37,-18,17,-23,37,128,-5,-60,-66,17,-8,-13,-19,-4,37,-7,-13,37,-25,-65,37,-10,17,-9,-12,-14,-20,37,-11,]),'RETURN':([0,2,3,4,6,8,9,12,14,31,43,67,74,77,101,108,110,112,113,114,121,123,124,127,129,131,132,133,135,136,137,138,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,-17,39,-59,-16,-26,-24,39,-18,-23,39,-5,-60,-66,-8,-13,-19,-4,39,-7,-13,39,-25,-65,39,-10,-9,-12,-14,-20,39,-11,]),'PRINTI':([0,2,3,4,6,8,9,12,14,31,43,67,74,77,101,108,110,112,113,114,121,123,124,127,129,131,132,133,135,136,137,138,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,-17,40,-59,-16,-26,-24,40,-18,-23,40,-5,-60,-66,-8,-13,-19,-4,40,-7,-13,40,-25,-65,40,-10,-9,-12,-14,-20,40,-11,]),'INPUT':([0,2,3,4,6,8,9,11,12,14,20,23,24,31,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,67,70,71,72,74,75,77,101,104,108,110,112,113,114,116,121,123,124,127,129,131,132,133,135,136,137,138,139,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,19,-17,19,19,19,19,-59,19,19,-16,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-26,19,19,19,-24,19,19,-18,19,-23,19,-5,-60,-66,19,-8,-13,-19,-4,19,-7,-13,19,-25,-65,19,-10,19,-9,-12,-14,-20,19,-11,]),'STR':([0,2,3,4,6,8,9,11,12,14,20,23,24,31,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,67,70,71,72,74,75,77,101,104,108,110,112,113,114,116,121,123,124,127,129,131,132,133,135,136,137,138,139,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,21,-17,21,21,21,21,-59,21,21,-16,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-26,21,21,21,-24,21,21,-18,21,-23,21,-5,-60,-66,21,-8,-13,-19,-4,21,-7,-13,21,-25,-65,21,-10,21,-9,-12,-14,-20,21,-11,]),'ATOI':([0,2,3,4,6,8,9,11,12,14,20,23,24,31,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,67,70,71,72,74,75,77,101,104,108,110,112,113,114,116,121,123,124,127,129,131,132,133,135,136,137,138,139,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,22,-17,22,22,22,22,-59,22,22,-16,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-26,22,22,22,-24,22,22,-18,22,-23,22,-5,-60,-66,22,-8,-13,-19,-4,22,-7,-13,22,-25,-65,22,-10,22,-9,-12,-14,-20,22,-11,]),'!':([0,2,3,4,6,8,9,11,12,14,20,23,24,31,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,67,70,71,72,74,75,77,101,104,108,110,112,113,114,116,121,123,124,127,129,131,132,133,135,136,137,138,139,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,24,-17,24,24,24,24,-59,24,24,-16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-26,24,24,24,-24,24,24,-18,24,-23,24,-5,-60,-66,24,-8,-13,-19,-4,24,-7,-13,24,-25,-65,24,-10,24,-9,-12,-14,-20,24,-11,]),'-':([0,2,3,4,6,8,9,11,12,14,17,18,20,23,24,26,27,28,29,31,33,37,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,66,67,70,71,72,73,74,75,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,121,122,123,124,125,127,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,23,-17,23,-46,45,23,23,23,-48,-49,-50,-51,-59,45,-46,23,23,-16,23,23,23,23,23,23,23,23,23,23,23,23,23,23,45,23,23,-45,-44,23,23,-26,23,23,23,45,-24,23,23,-53,45,-30,-31,-32,-33,-34,45,45,45,45,45,45,45,45,-43,-27,-54,45,45,45,-18,45,23,45,45,45,-23,45,23,-5,-60,-66,-52,23,-28,-29,-47,-8,45,-13,-19,-47,-4,23,45,-7,-13,23,-25,-65,23,-10,23,-9,-12,45,-14,-20,23,-11,]),'STRING':([0,2,3,4,6,8,9,11,12,14,20,23,24,31,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,67,70,71,72,74,75,77,101,104,108,110,112,113,114,116,121,123,124,127,129,131,132,133,135,136,137,138,139,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,26,-17,26,26,26,26,-59,26,26,-16,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-26,26,26,26,-24,26,26,-18,26,-23,26,-5,-60,-66,26,-8,-13,-19,-4,26,-7,-13,26,-25,-65,26,-10,26,-9,-12,-14,-20,26,-11,]),'NUM':([0,2,3,4,6,8,9,11,12,13,14,20,23,24,31,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,67,70,71,72,74,75,77,101,104,108,110,112,113,114,116,121,123,124,127,129,131,132,133,135,136,137,138,139,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,27,-17,30,27,27,27,27,-59,27,27,-16,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-26,27,27,27,-24,27,27,-18,27,-23,27,-5,-60,-66,27,-8,-13,-19,-4,27,-7,-13,27,-25,-65,27,-10,27,-9,-12,-14,-20,27,-11,]),'TRUE':([0,2,3,4,6,8,9,11,12,14,20,23,24,31,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,67,70,71,72,74,75,77,101,104,108,110,112,113,114,116,121,123,124,127,129,131,132,133,135,136,137,138,139,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,28,-17,28,28,28,28,-59,28,28,-16,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-26,28,28,28,-24,28,28,-18,28,-23,28,-5,-60,-66,28,-8,-13,-19,-4,28,-7,-13,28,-25,-65,28,-10,28,-9,-12,-14,-20,28,-11,]),'FALSE':([0,2,3,4,6,8,9,11,12,14,20,23,24,31,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,67,70,71,72,74,75,77,101,104,108,110,112,113,114,116,121,123,124,127,129,131,132,133,135,136,137,138,139,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,29,-17,29,29,29,29,-59,29,29,-16,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-26,29,29,29,-24,29,29,-18,29,-23,29,-5,-60,-66,29,-8,-13,-19,-4,29,-7,-13,29,-25,-65,29,-10,29,-9,-12,-14,-20,29,-11,]),'(':([0,2,3,4,6,8,9,11,12,14,15,16,17,19,20,21,22,23,24,31,32,34,35,36,37,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,67,69,70,71,72,74,75,77,101,104,108,110,112,113,114,116,121,123,124,127,129,131,132,133,135,136,137,138,139,140,141,143,144,145,146,],[-56,-2,-58,-55,-3,-60,-57,20,-17,20,41,-6,42,58,20,60,61,20,20,-59,66,68,-15,70,42,20,75,20,-16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-26,104,20,20,20,-24,20,20,-18,20,-23,20,-5,-60,-66,20,-8,-13,-19,-4,20,-7,-13,20,-25,-65,20,-10,20,-9,-12,-14,-20,20,-11,]),'$end':([0,1,2,3,4,6,8,9,12,14,31,43,67,74,101,108,112,114,121,124,127,131,135,136,138,140,144,146,],[-56,0,-2,-58,-55,-3,-60,-57,-17,-1,-59,-16,-26,-24,-18,-23,-5,-66,-8,-19,-4,-7,-25,-65,-10,-9,-20,-11,]),'=':([7,37,125,134,],[11,71,-21,139,]),';':([7,17,18,26,27,28,29,33,37,39,62,63,65,73,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,106,115,117,118,119,120,125,126,142,],[12,-46,43,-48,-49,-50,-51,67,-46,74,-45,-44,101,108,-53,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-27,-54,121,124,-52,-28,-29,-47,131,-47,135,144,]),'[':([7,17,25,37,38,],[13,-22,64,-22,72,]),'+':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,44,-48,-49,-50,-51,44,-46,44,-45,-44,44,-53,44,-30,-31,-32,-33,-34,44,44,44,44,44,44,44,44,-43,-27,-54,44,44,44,44,44,44,44,44,-52,-28,-29,-47,44,-47,44,44,]),'*':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,46,-48,-49,-50,-51,46,-46,46,-45,-44,46,-53,46,46,46,-32,-33,-34,46,46,46,46,46,46,46,46,46,-27,-54,46,46,46,46,46,46,46,46,-52,-28,-29,-47,46,-47,46,46,]),'/':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,47,-48,-49,-50,-51,47,-46,47,-45,-44,47,-53,47,47,47,-32,-33,-34,47,47,47,47,47,47,47,47,47,-27,-54,47,47,47,47,47,47,47,47,-52,-28,-29,-47,47,-47,47,47,]),'%':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,48,-48,-49,-50,-51,48,-46,48,-45,-44,48,-53,48,48,48,-32,-33,-34,48,48,48,48,48,48,48,48,48,-27,-54,48,48,48,48,48,48,48,48,-52,-28,-29,-47,48,-47,48,48,]),'OR':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,49,-48,-49,-50,-51,49,-46,49,-45,-44,49,-53,49,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-27,-54,49,49,49,49,49,49,49,49,-52,-28,-29,-47,49,-47,49,49,]),'AND':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,50,-48,-49,-50,-51,50,-46,50,-45,-44,50,-53,50,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-27,-54,50,50,50,50,50,50,50,50,-52,-28,-29,-47,50,-47,50,50,]),'>':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,51,-48,-49,-50,-51,51,-46,51,-45,-44,51,-53,51,-30,-31,-32,-33,-34,51,51,-37,-38,-39,-40,51,51,-43,-27,-54,51,51,51,51,51,51,51,51,-52,-28,-29,-47,51,-47,51,51,]),'<':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,52,-48,-49,-50,-51,52,-46,52,-45,-44,52,-53,52,-30,-31,-32,-33,-34,52,52,-37,-38,-39,-40,52,52,-43,-27,-54,52,52,52,52,52,52,52,52,-52,-28,-29,-47,52,-47,52,52,]),'GTE':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,53,-48,-49,-50,-51,53,-46,53,-45,-44,53,-53,53,-30,-31,-32,-33,-34,53,53,-37,-38,-39,-40,53,53,-43,-27,-54,53,53,53,53,53,53,53,53,-52,-28,-29,-47,53,-47,53,53,]),'LTE':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,54,-48,-49,-50,-51,54,-46,54,-45,-44,54,-53,54,-30,-31,-32,-33,-34,54,54,-37,-38,-39,-40,54,54,-43,-27,-54,54,54,54,54,54,54,54,54,-52,-28,-29,-47,54,-47,54,54,]),'EQ':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,55,-48,-49,-50,-51,55,-46,55,-45,-44,55,-53,55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-27,-54,55,55,55,55,55,55,55,55,-52,-28,-29,-47,55,-47,55,55,]),'NEQ':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,56,-48,-49,-50,-51,56,-46,56,-45,-44,56,-53,56,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-27,-54,56,56,56,56,56,56,56,56,-52,-28,-29,-47,56,-47,56,56,]),'$':([17,18,26,27,28,29,33,37,59,62,63,73,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,105,106,107,109,115,117,118,119,122,125,130,142,],[-46,57,-48,-49,-50,-51,57,-46,57,-45,-44,57,-53,57,-30,-31,-32,-33,-34,57,57,57,57,57,57,57,57,-43,-27,-54,57,57,57,57,57,57,57,57,-52,-28,-29,-47,57,-47,57,57,]),')':([17,26,27,28,29,41,42,58,59,62,63,68,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,105,109,115,117,118,119,122,128,130,],[-46,-48,-49,-50,-51,77,80,96,97,-45,-44,103,110,-62,115,-53,-64,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-27,-54,117,118,120,123,126,-52,-28,-29,-47,132,-61,-63,]),',':([17,26,27,28,29,62,63,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,115,117,118,119,128,130,],[-46,-48,-49,-50,-51,-45,-44,111,-62,116,-53,-64,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-27,-54,-52,-28,-29,-47,-61,-63,]),']':([17,26,27,28,29,30,62,63,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,107,115,117,118,119,],[-46,-48,-49,-50,-51,65,-45,-44,-53,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-27,-54,119,125,-52,-28,-29,-47,]),'}':([31,67,74,108,113,114,121,124,129,131,135,136,138,140,144,146,],[-59,-26,-24,-23,-60,-66,-8,-19,136,-7,-25,-65,-10,-9,-20,-11,]),'ELSE':([67,74,108,114,121,124,131,135,136,138,140,144,146,],[-26,-24,-23,-66,-8,-19,-7,-25,-65,141,-9,-20,-11,]),'{':([77,110,123,132,133,137,141,143,145,],[113,113,-13,-13,113,113,-12,-14,113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'start':([2,],[3,]),'var_declare':([2,],[4,]),'funlist':([3,],[6,]),'entrypoint':([6,],[8,]),'fun':([6,],[9,]),'stmtlist':([8,113,],[14,129,]),'fun_name':([10,],[15,]),'expr':([11,14,20,23,24,39,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,70,71,72,75,77,104,110,116,129,133,137,139,145,],[18,33,59,62,63,73,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,100,102,105,106,107,109,33,122,33,130,33,33,33,142,33,]),'arr_id':([11,14,20,23,24,39,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,66,70,71,72,75,77,104,110,116,129,133,137,139,145,],[25,38,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,38,25,38,25,38,38,38,25,38,]),'stmt':([14,77,110,129,133,137,145,],[31,114,114,31,114,114,114,]),'new_label':([35,],[69,]),'idlist':([41,],[76,]),'exprlist':([42,],[79,]),'block':([77,110,133,137,145,],[112,127,138,140,146,]),'jz':([123,132,],[133,137,]),'add':([125,],[134,]),'jmp':([141,],[143,]),'jz_label':([143,],[145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist start funlist entrypoint stmtlist','program',5,'p_program','parser.py',22),
  ('start -> <empty>','start',0,'p_start','parser.py',26),
  ('entrypoint -> <empty>','entrypoint',0,'p_entrypoint','parser.py',30),
  ('fun -> DEF fun_name ( idlist ) block','fun',6,'p_fun','parser.py',34),
  ('fun -> DEF fun_name ( ) block','fun',5,'p_fun','parser.py',35),
  ('fun_name -> ID','fun_name',1,'p_fun_name','parser.py',45),
  ('stmt -> PRINT ( expr ) ;','stmt',5,'p_stmt_print','parser.py',53),
  ('stmt -> PRINTLN ( ) ;','stmt',4,'p_stmt_println','parser.py',57),
  ('stmt -> WHILE new_label ( expr ) jz block','stmt',7,'p_stmt_while','parser.py',61),
  ('stmt -> IF ( expr ) jz block','stmt',6,'p_stmt_ifelse','parser.py',67),
  ('stmt -> IF ( expr ) jz block ELSE jmp jz_label block','stmt',10,'p_stmt_ifelse','parser.py',68),
  ('jmp -> <empty>','jmp',0,'p_jmp','parser.py',75),
  ('jz -> <empty>','jz',0,'p_jz','parser.py',81),
  ('jz_label -> <empty>','jz_label',0,'p_jz_label','parser.py',88),
  ('new_label -> <empty>','new_label',0,'p_new_label','parser.py',93),
  ('var_declare -> VAR ID = expr ;','var_declare',5,'p_declare','parser.py',99),
  ('var_declare -> VAR ID ;','var_declare',3,'p_declare','parser.py',100),
  ('var_declare -> VAR ID [ NUM ] ;','var_declare',6,'p_declare_array','parser.py',110),
  ('stmt -> ID = expr ;','stmt',4,'p_stmt_assign','parser.py',121),
  ('stmt -> arr_id [ expr ] add = expr ;','stmt',8,'p_stmt_assign_arr','parser.py',130),
  ('add -> <empty>','add',0,'p_add','parser.py',134),
  ('arr_id -> ID','arr_id',1,'p_stmt_arr_id','parser.py',138),
  ('stmt -> RETURN expr ;','stmt',3,'p_stmt_return','parser.py',148),
  ('stmt -> RETURN ;','stmt',2,'p_stmt_return','parser.py',149),
  ('stmt -> PRINTI ( expr ) ;','stmt',5,'p_stmt_printi','parser.py',157),
  ('stmt -> expr ;','stmt',2,'p_stmt_expr','parser.py',161),
  ('expr -> INPUT ( )','expr',3,'p_expr_input','parser.py',169),
  ('expr -> STR ( expr )','expr',4,'p_expr_str','parser.py',173),
  ('expr -> ATOI ( expr )','expr',4,'p_expr_atoi','parser.py',177),
  ('expr -> expr + expr','expr',3,'p_expr_binop','parser.py',181),
  ('expr -> expr - expr','expr',3,'p_expr_binop','parser.py',182),
  ('expr -> expr * expr','expr',3,'p_expr_binop','parser.py',183),
  ('expr -> expr / expr','expr',3,'p_expr_binop','parser.py',184),
  ('expr -> expr % expr','expr',3,'p_expr_binop','parser.py',185),
  ('expr -> expr OR expr','expr',3,'p_expr_binop','parser.py',186),
  ('expr -> expr AND expr','expr',3,'p_expr_binop','parser.py',187),
  ('expr -> expr > expr','expr',3,'p_expr_binop','parser.py',188),
  ('expr -> expr < expr','expr',3,'p_expr_binop','parser.py',189),
  ('expr -> expr GTE expr','expr',3,'p_expr_binop','parser.py',190),
  ('expr -> expr LTE expr','expr',3,'p_expr_binop','parser.py',191),
  ('expr -> expr EQ expr','expr',3,'p_expr_binop','parser.py',192),
  ('expr -> expr NEQ expr','expr',3,'p_expr_binop','parser.py',193),
  ('expr -> expr $ expr','expr',3,'p_expr_binop','parser.py',194),
  ('expr -> ! expr','expr',2,'p_expr_not','parser.py',214),
  ('expr -> - expr','expr',2,'p_expr_neg','parser.py',218),
  ('expr -> ID','expr',1,'p_expr_id','parser.py',223),
  ('expr -> arr_id [ expr ]','expr',4,'p_expr_ind','parser.py',232),
  ('expr -> STRING','expr',1,'p_expr_string','parser.py',237),
  ('expr -> NUM','expr',1,'p_expr_num','parser.py',241),
  ('expr -> TRUE','expr',1,'p_expr_true','parser.py',245),
  ('expr -> FALSE','expr',1,'p_expr_false','parser.py',249),
  ('expr -> ID ( exprlist )','expr',4,'p_expr_fun','parser.py',253),
  ('expr -> ID ( )','expr',3,'p_expr_fun','parser.py',254),
  ('expr -> ( expr )','expr',3,'p_expr','parser.py',264),
  ('declist -> declist var_declare','declist',2,'p_declist','parser.py',269),
  ('declist -> <empty>','declist',0,'p_declist','parser.py',270),
  ('funlist -> funlist fun','funlist',2,'p_funlist','parser.py',273),
  ('funlist -> <empty>','funlist',0,'p_funlist','parser.py',274),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','parser.py',277),
  ('stmtlist -> <empty>','stmtlist',0,'p_stmtlist','parser.py',278),
  ('idlist -> idlist , ID','idlist',3,'p_idlist','parser.py',281),
  ('idlist -> ID','idlist',1,'p_idlist','parser.py',282),
  ('exprlist -> exprlist , expr','exprlist',3,'p_exprlist','parser.py',289),
  ('exprlist -> expr','exprlist',1,'p_exprlist','parser.py',290),
  ('block -> { stmtlist }','block',3,'p_block','parser.py',293),
  ('block -> stmt','block',1,'p_block','parser.py',294),
]
